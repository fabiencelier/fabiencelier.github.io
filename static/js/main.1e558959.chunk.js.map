{"version":3,"sources":["api/person.ts","api/query.ts","responsive/Responsive.tsx","actions/user.ts","actions/userTypes.ts","components/util/ConnectedBirthPicker.tsx","components/welcome/WelcomeHome.tsx","components/Tabular.tsx","date/date.ts","selecters/databaseSelecter.ts","components/home/OrderPicker.tsx","components/util/TagList.tsx","components/home/HomeItemList.tsx","components/home/InfiniteList.tsx","components/home/Home.tsx","actions/database.ts","actions/databaseTypes.ts","components/settings/BirthSettings.tsx","components/settings/NotificationSettings.tsx","components/settings/CategorySettings.tsx","components/settings/Settings.tsx","components/Statistics.tsx","components/description/DescriptionBody.tsx","components/description/DescriptionHeader.tsx","components/description/Description.tsx","serviceWorker.js","reducers/database.ts","store/databaseStoreTypes.ts","store/userStoreTypes.ts","reducers/user.ts","store/configureStore.ts","index.tsx","App.tsx"],"names":["Person","id","days","birthDate","deathDate","firstName","lastName","title","description","image","link","categories","exactDates","nationality","mannerOfDeath","causeOfDeath","imdbId","gender","occupations","deezerId","spotifyId","request","url","getAllDatabase","a","window","fetch","then","response","json","res","values","map","per","row","Date","split","Desktop","props","query","children","Mobile","className","setNotifPreferences","pref","type","defaultBirthDate","ConnectedBirthPicker","onChange","value","dispatch","date","toDate","defaultValue","moment","WelcomeHome","undefined","Tab","to","path","style","color","active","icon","text","mapStateToProps","state","isNew","user","birth","addTabs","args","connect","zIndex","WrappedComponent","innerAddTabs","diffWithTodayInDays","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","pad","num","s","substr","length","formatDate","databaseSelecter","database","age","outlived","filter","el","parseInt","sort","objA","objB","OrderPicker","Group","order","buttonStyle","e","target","Button","TagList","cat","key","PersonDescription","ListItem","Item","width","Meta","avatar","src","height","objectFit","borderRadius","marginLeft","alt","baseSize","createStateFromProps","allPeople","people","displayedPeople","index","hasMore","loading","InfiniteList","handleInfiniteOnLoad","setState","currentSize","render","initialLoad","pageStart","loadMore","useWindow","itemLayout","dataSource","renderItem","item","React","Component","HomeContent","paddingTop","maxWidth","data","Home","orderPref","BirthSettings","time","getHours","getMinutes","getSeconds","onTimeChange","setHours","setMinutes","setSeconds","showNotification","console","log","Notification","requestPermission","result","navigator","serviceWorker","ready","registration","body","vibrate","isNotificationAllowed","permission","NotificationSettings","suscribeToNotif","component","notifAllowed","onClick","notifPref","CategorySettings","checked","includes","category","updateCategory","addCatagory","removeCatagory","Settings","createState","now","seconds","minutes","hours","StatisticsContent","interval","setInterval","clearInterval","this","Statistics","outterStyle","display","flexDirection","alignItems","marginTop","innerStyle","backgroundColor","textStyle","textAlign","textJustify","marginRight","Image","maxHeight","TopDescription","manner","cause","WikipediaLink","href","shape","size","DeezerLink","ImdbLink","DescriptionBody","DescriptionHeader","paddingBottom","subTitle","onBack","history","goBack","backIcon","Description","ownProps","p","match","params","minHeight","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","messaging","getToken","tok","localStorage","setItem","onMessage","payload","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","defaultDatabaseState","deserializeDatabaseState","obj","serialized","deserializeUserState","defaultUserState","getPersistedState","storedState","getItem","JSON","parse","rootReducer","combineReducers","action","store","createStore","subscribe","stringify","getState","configureStore","ConnectedApp","exact","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1e558959.chunk.js","sourcesContent":["export class Person {\n  constructor(\n    public id: string,\n    public days: string,\n    public birthDate: Date,\n    public deathDate: Date,\n    public firstName: string,\n    public lastName: string,\n    public title: string,\n    public description: string,\n    public image: string,\n    public link: string,\n    public categories: string[],\n    public exactDates: boolean,\n    public nationality: string[],\n    public mannerOfDeath: string,\n    public causeOfDeath: string,\n    public imdbId: string,\n    public gender: string,\n    public occupations: string[],\n    public deezerId: string,\n    public spotifyId: string\n  ) {}\n}\n\nexport const getPerson = (row: string[]) =>\n  new Person(\n    row[0],\n    row[1],\n    new Date(row[2]),\n    new Date(row[3]),\n    row[4],\n    row[5],\n    row[6],\n    row[7],\n    row[8],\n    row[9],\n    row[10] ? row[10].split(\",\") : [],\n    row[11] === \"TRUE\",\n    row[12] ? row[12].split(\",\") : [],\n    row[13],\n    row[14],\n    row[15],\n    row[16],\n    row[17] ? row[17].split(\",\") : [],\n    row[18],\n    row[19]\n  );\n","import { getPerson, Person } from \"../api/person\";\n\nconst request = {\n  spreadsheetId: \"1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk\",\n  range: \"database!A1:T\",\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\"\n};\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`;\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then(response => {\n    return response.json().then(res => {\n      if (res) {\n        return res.values.map((per: string[]) => getPerson(per));\n      }\n    });\n  });\n};\n\nexport const getFromId = async (id: string) => {\n  const allData = await getAllDatabase();\n  if (allData === undefined) {\n    return undefined;\n  }\n  return allData.filter((p: Person) => p.id === id);\n};\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\n\nexport const Desktop = (props: { children: JSX.Element | string }) => (\n  <MediaQuery query=\"(min-device-width: 1224px)\">{props.children}</MediaQuery>\n);\n\nexport const Mobile = (props: { children: JSX.Element | string }) => (\n  <MediaQuery className=\"mobile\" query=\"(max-device-width: 1224px)\">\n    {props.children}\n  </MediaQuery>\n);\n","import {\n  SET_BIRTH_DATE,\n  SET_BIRTH_TIME,\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes\n} from \"./userTypes\";\n\nexport const setBirthDate = (date: Date): UserActionTypes => ({\n  type: SET_BIRTH_DATE,\n  date\n});\n\nexport const setBirthTime = (\n  time: [number, number, number]\n): UserActionTypes => ({\n  type: SET_BIRTH_TIME,\n  time\n});\n\nexport const addCatagory = (category: string): UserActionTypes => ({\n  type: ADD_CATEGORY,\n  category\n});\n\nexport const removeCatagory = (category: string): UserActionTypes => ({\n  type: REMOVE_CATEGORY,\n  category\n});\n\nexport const setNotifPreferences = (pref: string): UserActionTypes => ({\n  type: SET_NOTIF_PREF,\n  pref\n});\n\nexport const setOrderPreference = (pref: string): UserActionTypes => ({\n  type: SET_ORDER_PREF,\n  pref\n});\n","export const SET_BIRTH_DATE = \"SET_BIRTH_DATE\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const REMOVE_CATEGORY = \"REMOVE_CATEGORY\";\nexport const SET_NOTIF_PREF = \"SET_NOTIF_PREF\";\nexport const SET_ORDER_PREF = \"SET_ORDER_PREF\";\nexport const SET_BIRTH_TIME = \"SET_BIRTH_TIME\";\n\ninterface SetBirthDateAction {\n  type: typeof SET_BIRTH_DATE;\n  date: Date;\n}\n\ninterface SetBirthTimeAction {\n  type: typeof SET_BIRTH_TIME;\n  time: [number, number, number];\n}\n\ninterface AddCategoryAction {\n  type: typeof ADD_CATEGORY;\n  category: string;\n}\n\ninterface RemoveCategoryAction {\n  type: typeof REMOVE_CATEGORY;\n  category: string;\n}\n\ninterface SetNotifPrefAction {\n  type: typeof SET_NOTIF_PREF;\n  pref: string;\n}\n\ninterface SetOrderPrefAction {\n  type: typeof SET_ORDER_PREF;\n  pref: string;\n}\n\nexport type UserActionTypes =\n  | SetBirthDateAction\n  | AddCategoryAction\n  | RemoveCategoryAction\n  | SetNotifPrefAction\n  | SetOrderPrefAction\n  | SetBirthTimeAction;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthDate } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\n\nconst defaultBirthDate = new Date(\"1993-10-12\");\n\nexport const ConnectedBirthPicker = (props: {\n  value: Date | undefined;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <DatePicker\n      onChange={value =>\n        value !== null && props.dispatch(setBirthDate(value.toDate()))\n      }\n      defaultValue={moment(props.value ? props.value : defaultBirthDate)}\n    />\n  </div>\n);\n","import React from \"react\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { Dispatch } from \"redux\";\n\nexport const WelcomeHome = (props: { dispatch: Dispatch }) => (\n  <div>\n    <h1 className=\"theme\">Outlive</h1>\n    <h3 className=\"theme\">Select your birth date to start</h3>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={undefined} />\n  </div>\n);\n","import React, { ComponentType } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport { Desktop } from \"../responsive/Responsive\";\nimport { WelcomeHome } from \"./welcome/WelcomeHome\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { AppState } from \"../store/configureStore\";\n\nconst Tab = (props: {\n  active: boolean;\n  path: string;\n  icon: string;\n  text: string;\n}) => (\n  <div>\n    <Link\n      className=\"Header-link\"\n      to={props.path}\n      style={{ color: props.active ? \"white\" : \"grey\" }}\n    >\n      <Icon type={props.icon} /> <Desktop>{props.text}</Desktop>\n    </Link>\n  </div>\n);\n\ninterface HocArguments {\n  WrappedComponent: ComponentType;\n  active: string;\n}\n\nconst innerAddTabs = (args: HocArguments) => {\n  return (props: { isNew: boolean; dispatch: Dispatch }) => {\n    if (props.isNew) {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <WelcomeHome dispatch={props.dispatch} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <div style={{ zIndex: 10 }} className=\"flex-container\">\n              <Tab\n                path=\"/\"\n                icon=\"home\"\n                text=\"Home\"\n                active={args.active === \"home\"}\n              />\n              <Tab\n                path=\"/statistics\"\n                icon=\"bar-chart\"\n                text=\"Statistics\"\n                active={args.active === \"statistics\"}\n              />\n              <Tab\n                path=\"/settings\"\n                icon=\"setting\"\n                text=\"Settings\"\n                active={args.active === \"settings\"}\n              />\n            </div>\n            <args.WrappedComponent />\n          </div>\n        </div>\n      );\n    }\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  isNew: state.user.birth ? false : true\n});\n\nexport const addTabs = (args: HocArguments) =>\n  connect(mapStateToProps)(innerAddTabs(args));\n","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a: Date, b: Date): number => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n};\n\nexport const diffWithTodayInDays = (date: Date | undefined): number =>\n  date ? dateDiffInDays(date, new Date()) : 0;\n\nfunction pad(num: number): string {\n  var s = \"00\" + num;\n  return s.substr(s.length - 2);\n}\n\nexport const formatDate = (date: Date) => {\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(\n    date.getDate()\n  )}`;\n};\n","import { Person } from \"../api/person\";\n\nexport const databaseSelecter = (\n  database: Person[] = [],\n  age: number,\n  outlived: boolean\n) =>\n  database\n    .filter(el =>\n      outlived ? parseInt(el.days, 10) < age : parseInt(el.days, 10) > age\n    )\n    .sort((objA, objB) => {\n      const a = parseInt(objA.days, 10);\n      const b = parseInt(objB.days, 10);\n      return outlived ? (a < b ? 1 : -1) : a > b ? 1 : -1;\n    });\n","import React from \"react\";\nimport { Radio } from \"antd\";\nimport { setOrderPreference } from \"../../actions/user\";\nimport { HomeProps } from \"./Home\";\n\nexport const OrderPicker = (props: HomeProps) => (\n  <div>\n    <Radio.Group\n      value={props.order}\n      buttonStyle=\"solid\"\n      onChange={e => props.dispatch(setOrderPreference(e.target.value))}\n    >\n      <Radio.Button value=\"outlived\">Oulived</Radio.Button>\n      <Radio.Button value=\"next\">Next</Radio.Button>\n    </Radio.Group>\n  </div>\n);\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nexport const TagList = (props: { categories: string[] }) => (\n  <div>\n    {props.categories.map(cat => (\n      <Tag key={cat} color=\"purple\">\n        {cat}\n      </Tag>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport { List } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { TagList } from \"../util/TagList\";\nimport { Person } from \"../../api/person\";\n\nconst PersonDescription = (props: Person) => (\n  <div>\n    <div style={{ color: \"white\" }}>{props.days} days</div>\n    <TagList categories={props.categories} />\n  </div>\n);\n\nexport const ListItem = (props: Person) => (\n  <List.Item key={props.id}>\n    <Link\n      style={{ width: \"100%\" }}\n      to={props.id === \"you\" ? \"settings\" : `description/${props.id}`}\n    >\n      <List.Item.Meta\n        avatar={\n          <img\n            src={props.image}\n            style={{\n              width: 64,\n              height: 64,\n              objectFit: \"cover\",\n              borderRadius: \"10px\",\n              marginLeft: \"15px\"\n            }}\n            alt={props.title}\n          />\n        }\n        style={{ width: \"100%\" }}\n        title={<span style={{ color: \"white\" }}>{props.title}</span>}\n        description={<PersonDescription {...props} />}\n      />\n    </Link>\n  </List.Item>\n);\n","import InfiniteScroll from \"react-infinite-scroller\";\nimport { ListItem } from \"./HomeItemList\";\nimport { List, Spin } from \"antd\";\nimport React from \"react\";\nimport { Person } from \"../../api/person\";\n\nconst baseSize = 10;\n\ninterface InfiniteListState {\n  allPeople: Person[];\n  displayedPeople: Person[];\n  hasMore: boolean;\n  loading: boolean;\n}\n\ninterface InfiniteListProps {\n  people: Person[];\n}\n\nconst createStateFromProps = (props: InfiniteListProps): InfiniteListState => ({\n  allPeople: props.people,\n  displayedPeople: props.people.filter((el, index) => index < baseSize),\n  hasMore: props.people.length >= baseSize,\n  loading: false\n});\n\nexport class InfiniteList extends React.Component<\n  InfiniteListProps,\n  InfiniteListState\n> {\n  constructor(props: InfiniteListProps) {\n    super(props);\n    this.state = createStateFromProps(props);\n  }\n\n  static getDerivedStateFromProps(\n    props: InfiniteListProps,\n    state: InfiniteListState\n  ) {\n    // Only update the state on new props\n    if (props.people !== state.allPeople) {\n      return createStateFromProps(props);\n    }\n    return null;\n  }\n\n  handleInfiniteOnLoad = () => {\n    this.setState({\n      loading: true\n    });\n    const currentSize = this.state.displayedPeople.length;\n    if (currentSize === this.state.allPeople.length) {\n      this.setState({\n        hasMore: false,\n        loading: false\n      });\n      return;\n    }\n    this.setState({\n      displayedPeople: this.state.allPeople.filter(\n        (el, index) => index < currentSize + baseSize\n      ),\n      loading: false\n    });\n  };\n\n  render = () => (\n    <InfiniteScroll\n      initialLoad={false}\n      pageStart={0}\n      loadMore={this.handleInfiniteOnLoad}\n      hasMore={!this.state.loading && this.state.hasMore}\n      useWindow={true}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={this.state.displayedPeople}\n        renderItem={item => <ListItem {...item} />}\n      >\n        {this.state.loading && this.state.hasMore && (\n          <div className=\"demo-loading-container\">\n            <Spin />\n          </div>\n        )}\n      </List>\n    </InfiniteScroll>\n  );\n}\n","import React, { Component } from \"react\";\nimport { getAllDatabase } from \"../../api/query\";\nimport { addTabs } from \"../Tabular\";\nimport { diffWithTodayInDays } from \"../../date/date\";\nimport { connect } from \"react-redux\";\nimport { fillDatabase } from \"../../actions/database\";\nimport { databaseSelecter } from \"../../selecters/databaseSelecter\";\nimport { AppState } from \"../../store/configureStore\";\nimport { Dispatch } from \"redux\";\nimport { DatabaseStore } from \"../../store/databaseStoreTypes\";\nimport { OrderPicker } from \"./OrderPicker\";\nimport { InfiniteList } from \"./InfiniteList\";\n\nexport interface HomeProps {\n  database: DatabaseStore;\n  age: number;\n  order: string;\n  dispatch: Dispatch;\n}\n\nclass HomeContent extends Component<HomeProps> {\n  componentDidMount() {\n    getAllDatabase().then(res => res && this.props.dispatch(fillDatabase(res)));\n  }\n\n  render = () => (\n    <div style={{ width: \"100%\", paddingTop: \"100px\", maxWidth: \"400px\" }}>\n      <h2 style={{ color: \"white\" }}>{this.props.age} days</h2>\n      <OrderPicker {...this.props} />\n      <InfiniteList people={this.props.database} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const age = diffWithTodayInDays(state.user.birth);\n  return {\n    database: databaseSelecter(\n      state.database,\n      age,\n      state.user.orderPref === \"outlived\"\n    ),\n    age,\n    order: state.user.orderPref\n  };\n};\n\nexport const Home = addTabs({\n  WrappedComponent: connect(mapStateToProps)(HomeContent),\n  active: \"home\"\n});\n","import { Person } from \"../api/person\";\nimport { DatabaseActionType, FILL_DATABASE } from \"./databaseTypes\";\n\nexport const fillDatabase = (data: Person[]): DatabaseActionType => ({\n  type: FILL_DATABASE,\n  data\n});\n","import { Person } from \"../api/person\";\nexport const FILL_DATABASE = \"FILL_DATABASE\";\n\ninterface FillDatabaseAction {\n  type: typeof FILL_DATABASE;\n  data: Person[];\n}\n\nexport type DatabaseActionType = FillDatabaseAction;\n","import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { TimePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthTime } from \"../../actions/user\";\n\nconst createMoment = (\n  date: Date,\n  time: [number, number, number]\n): moment.Moment => {\n  date.setHours(time[0]);\n  date.setMinutes(time[1]);\n  date.setSeconds(time[2]);\n  return moment(date);\n};\n\nconst onTimeChange = (moment: moment.Moment, dispatch: Dispatch) => {\n  const date = moment.toDate();\n  dispatch(\n    setBirthTime([date.getHours(), date.getMinutes(), date.getSeconds()])\n  );\n};\n\nexport const BirthSettings = (props: {\n  user: { birth?: Date; time: [number, number, number] };\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Birthdate</h2>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={props.user.birth} />\n    <TimePicker\n      onChange={value => onTimeChange(value, props.dispatch)}\n      value={\n        props.user.birth && createMoment(props.user.birth, props.user.time)\n      }\n    />\n  </div>\n);\n","import React from \"react\";\nimport { Button, Radio } from \"antd\";\nimport { setNotifPreferences } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { diffWithTodayInDays } from \"../../date/date\";\n\nconst showNotification = (age: number) => {\n  console.log(\"Checking for notif\");\n  Notification.requestPermission(result => {\n    if (result === \"granted\") {\n      console.log(\"Notif Allowed\");\n      if (!navigator.serviceWorker) {\n        return;\n      }\n      navigator.serviceWorker.ready.then(registration => {\n        console.log(\"Notif !\");\n        registration.showNotification(`${age} days !`, {\n          body: \"Congratulations ! Keep living !\",\n          icon: \"logo192.png\",\n          vibrate: [200, 100]\n        });\n      });\n    }\n  });\n};\n\nconst isNotificationAllowed = () => {\n  return Notification.permission === \"granted\";\n};\n\ninterface NotifSettingsProps {\n  user: UserState;\n  dispatch: Dispatch;\n}\n\nexport class NotificationSettings extends React.Component<\n  NotifSettingsProps,\n  { notifAllowed: boolean }\n> {\n  constructor(props: NotifSettingsProps) {\n    super(props);\n    this.state = {\n      notifAllowed: isNotificationAllowed()\n    };\n  }\n\n  suscribeToNotif = (age: number) => {\n    const component = this;\n    Notification.requestPermission().then(function(result) {\n      component.setState({ notifAllowed: result === \"granted\" });\n      if (result === \"granted\") {\n        showNotification(age);\n      }\n    });\n  };\n\n  render = () => (\n    <div>\n      <h2 className=\"theme\">Notifications Mode</h2>\n      {!this.state.notifAllowed && (\n        <div>\n          <Button\n            onClick={() =>\n              this.suscribeToNotif(diffWithTodayInDays(this.props.user.birth))\n            }\n          >\n            Allow notification\n          </Button>\n        </div>\n      )}\n      {this.state.notifAllowed && (\n        <Radio.Group\n          onChange={e =>\n            this.props.dispatch(setNotifPreferences(e.target.value))\n          }\n          value={this.props.user.notifPref}\n        >\n          <Radio value={\"outlive\"}>When I outlive</Radio>\n          <Radio value={\"never\"}>Never</Radio>\n        </Radio.Group>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { addCatagory, removeCatagory } from \"../../actions/user\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst categories = [\n  \"Famous\",\n  \"Actors\",\n  \"Artists\",\n  \"Politics\",\n  \"Science\",\n  \"Singers\",\n  \"Sport\"\n];\n\nconst updateCategory = (\n  checked: boolean,\n  category: string,\n  dispatch: Dispatch\n) => {\n  checked\n    ? dispatch(addCatagory(category))\n    : dispatch(removeCatagory(category));\n};\n\nexport const CategorySettings = (props: {\n  user: UserState;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Categories</h2>\n    <div style={{ width: \"100%\" }}>\n      {categories.map(cat => (\n        <Checkbox\n          checked={props.user.categories.includes(cat)}\n          onChange={value =>\n            updateCategory(value.target.checked, cat, props.dispatch)\n          }\n          key={cat}\n        >\n          {cat}\n        </Checkbox>\n      ))}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Divider } from \"antd\";\nimport { addTabs } from \"../Tabular\";\nimport { connect } from \"react-redux\";\nimport { BirthSettings } from \"./BirthSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { CategorySettings } from \"./CategorySettings\";\nimport { AppState } from \"../../store/configureStore\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst SettingsContent = (props: { user: UserState; dispatch: Dispatch }) => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <BirthSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <NotificationSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <CategorySettings {...props} />\n  </div>\n);\n\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user\n});\n\nexport const Settings = addTabs({\n  WrappedComponent: connect(mapStateToProps)(SettingsContent),\n  active: \"settings\"\n});\n","import React from \"react\";\nimport { Statistic } from \"antd\";\nimport { addTabs } from \"./Tabular\";\nimport { diffWithTodayInDays } from \"../date/date\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../store/configureStore\";\n\ninterface StatisticsProps {\n  age: number;\n  time: [number, number, number];\n}\n\nconst createState = (age: number, time: [number, number, number]) => {\n  const now = new Date();\n  const seconds =\n    ((age * 24 + now.getHours() - time[0]) * 60 + now.getMinutes() - time[1]) *\n      60 +\n    now.getSeconds() -\n    time[2];\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nclass StatisticsContent extends React.Component<StatisticsProps> {\n  interval: NodeJS.Timeout = setInterval(\n    () => this.setState(createState(this.props.age, this.props.time)),\n    250\n  );\n\n  state = createState(this.props.age, this.props.time);\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render = () => (\n    <div>\n      <h1 style={{ color: \"white\" }}>Statistics</h1>\n      <h3 style={{ color: \"white\" }}>Survival Time</h3>\n      <Statistic title=\"Days\" value={this.props.age} />\n      <Statistic title=\"Hours\" value={this.state.hours} />\n      <Statistic title=\"Minutes\" value={this.state.minutes} />\n      <Statistic title=\"Seconds\" value={this.state.seconds} />\n    </div>\n  );\n}\nconst mapStateToProps = (state: AppState) => ({\n  age: diffWithTodayInDays(state.user.birth),\n  time: state.user.time\n});\n\nexport const Statistics = addTabs({\n  WrappedComponent: connect(mapStateToProps)(StatisticsContent),\n  active: \"statistics\"\n});\n","import React, { CSSProperties } from \"react\";\nimport { formatDate } from \"../../date/date\";\nimport { TagList } from \"../util/TagList\";\nimport { Desktop, Mobile } from \"../../responsive/Responsive\";\nimport { Avatar } from \"antd\";\nimport { Person } from \"../../api/person\";\n\nconst outterStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"30px\"\n};\n\nconst innerStyle: CSSProperties = {\n  backgroundColor: \"#282c34\",\n  color: \"white\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  maxWidth: \"1000px\"\n};\n\nconst textStyle: CSSProperties = {\n  textAlign: \"justify\",\n  textJustify: \"inter-word\",\n  marginLeft: \"15px\",\n  marginRight: \"15px\"\n};\n\nconst Image = (props: { image: string; alt: string }) => (\n  <div>\n    <Desktop>\n      <img src={props.image} style={{ maxHeight: \"500px\" }} alt={props.alt} />\n    </Desktop>\n    <Mobile>\n      <img src={props.image} style={{ maxHeight: \"200px\" }} alt={props.alt} />\n    </Mobile>\n  </div>\n);\n\nconst getCause = (manner: string, cause: string) =>\n  manner\n    ? cause\n      ? `${manner} (${cause})`\n      : manner\n    : cause\n    ? cause\n    : \"Unknown\";\n\nconst TopDescription = (props: Person) => (\n  <div style={innerStyle}>\n    <Image image={props.image} alt={props.title} />\n    <h2 style={{ color: \"white\" }}>{props.title}</h2>\n    <h3 style={{ color: \"white\" }}>{props.days} days</h3>\n    <p>\n      Birth : {formatDate(props.birthDate)}\n      <br />\n      Death : {formatDate(props.deathDate)}\n      <br />\n      Cause : {getCause(props.mannerOfDeath, props.causeOfDeath)}\n    </p>\n  </div>\n);\n\nconst get_deezer_link = (id: string) =>\n  `https://www.deezer.com/us/artist/${id}`;\n\nconst get_imdb_link = (id: string) => `https://www.imdb.com/name/${id}`;\n\nconst WikipediaLink = (props: { link: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={props.link}>\n      <Avatar shape=\"square\" size={64} src=\"/img/wikipedia-1024.png\" />\n    </a>\n  </div>\n);\n\nconst DeezerLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_deezer_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/deezer-1024.png\" />\n    </a>\n  </div>\n);\n\nconst ImdbLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_imdb_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/imdb-1024.png\" />\n    </a>\n  </div>\n);\n\nexport const DescriptionBody = (props: Person) => (\n  <div style={outterStyle}>\n    <TopDescription {...props} />\n    <div style={innerStyle}>\n      <div style={textStyle}>\n        {props.description && <p>{props.description}</p>}\n      </div>\n      <TagList categories={props.categories} />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"space-around\",\n          marginTop: \"20px\"\n        }}\n      >\n        <WikipediaLink link={props.link} />\n        {props.deezerId && <DeezerLink id={props.deezerId} />}\n        {props.imdbId && <ImdbLink id={props.imdbId} />}\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Icon, PageHeader } from \"antd\";\nimport { Person } from \"../../api/person\";\nimport { History } from \"history\";\n\nexport const DescriptionHeader = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <PageHeader\n    style={{\n      backgroundColor: \"black\",\n      color: \"white\",\n      paddingTop: \"1em\",\n      paddingBottom: \"1em\"\n    }}\n    title={\n      props.description && (\n        <div style={{ color: \"white\" }}>{props.description.title}</div>\n      )\n    }\n    subTitle={\n      props.description && (\n        <div style={{ color: \"white\" }}>{`${props.description.days} days`}</div>\n      )\n    }\n    onBack={() => props.history.goBack()}\n    backIcon={<Icon style={{ color: \"white\" }} type=\"arrow-left\" />}\n  />\n);\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { DescriptionBody } from \"./DescriptionBody\";\nimport { DescriptionHeader } from \"./DescriptionHeader\";\nimport { AppState } from \"../../store/configureStore\";\nimport { History } from \"history\";\nimport { Person } from \"../../api/person\";\n\nconst DescriptionContent = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <div style={{ minHeight: \"100vh\", backgroundColor: \"#282c34\" }}>\n    <DescriptionHeader {...props} />\n    {props.description ? (\n      <DescriptionBody {...props.description} />\n    ) : (\n      <Skeleton />\n    )}\n  </div>\n);\n\nconst mapStateToProps = (\n  state: AppState,\n  ownProps: { match: { params: { id: string } } }\n) => {\n  const description = state.database.filter(\n    p => p.id === ownProps.match.params.id\n  )[0];\n  return { description };\n};\n\nexport const Description = connect(mapStateToProps)(DescriptionContent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBbJMQG6PCUfD_kyHni6cZNQ1aDsKY51Hw\",\n  authDomain: \"outlive.firebaseapp.com\",\n  databaseURL: \"https://outlive.firebaseio.com\",\n  projectId: \"outlive\",\n  storageBucket: \"\",\n  messagingSenderId: \"734287808356\",\n  appId: \"1:734287808356:web:2a543963f82dfd202c9c71\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nconst messaging = firebase.messaging();\n// Add the public key generated from the console here.\n\nmessaging.getToken().then(tok => localStorage.setItem(\"notif-token\", tok));\nmessaging.onMessage(payload => console.log(\"message\", payload));\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AnyAction } from \"redux\";\nimport { DatabaseStore } from \"../store/databaseStoreTypes\";\nimport { FILL_DATABASE } from \"../actions/databaseTypes\";\n\nexport const defaultDatabaseState: DatabaseStore = [];\n\nexport default (\n  state: DatabaseStore = defaultDatabaseState,\n  action: AnyAction\n): DatabaseStore => {\n  switch (action.type) {\n    case FILL_DATABASE:\n      return action.data;\n    default:\n      return state;\n  }\n};\n","import { Person } from \"../api/person\";\n\nexport type DatabaseStore = Person[];\n\nexport interface SerializedPerson {\n  id: string;\n  days: string;\n  birthDate: string;\n  deathDate: string;\n  firstName: string;\n  lastName: string;\n  title: string;\n  description: string;\n  image: string;\n  link: string;\n  categories: string[];\n  exactDates: boolean;\n  nationality: string[];\n  mannerOfDeath: string;\n  causeOfDeath: string;\n  imdbId: string;\n  gender: string;\n  occupations: string[];\n  deezerId: string;\n  spotifyId: string;\n}\n\nexport type SerializedDatabaseState = SerializedPerson[];\n\nconst deserializedPerson = (serialized: SerializedPerson): Person =>\n  new Person(\n    serialized.id,\n    serialized.days,\n    new Date(serialized.birthDate),\n    new Date(serialized.deathDate),\n    serialized.firstName,\n    serialized.lastName,\n    serialized.title,\n    serialized.description,\n    serialized.image,\n    serialized.link,\n    serialized.categories,\n    serialized.exactDates,\n    serialized.nationality,\n    serialized.mannerOfDeath,\n    serialized.causeOfDeath,\n    serialized.imdbId,\n    serialized.gender,\n    serialized.occupations,\n    serialized.deezerId,\n    serialized.spotifyId\n  );\n\nexport const deserializeDatabaseState = (\n  state: SerializedDatabaseState\n): DatabaseStore => {\n  return state.map(obj => deserializedPerson(obj));\n};\n","export interface UserState {\n  categories: string[];\n  birth?: Date;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport interface SerializedUserState {\n  categories: string[];\n  birth: string;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport const deserializeUserState = (\n  serialized: SerializedUserState\n): UserState => ({\n  ...serialized,\n  birth: new Date(serialized.birth)\n});\n","import {\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_BIRTH_DATE,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes,\n  SET_BIRTH_TIME\n} from \"../actions/userTypes\";\nimport { UserState } from \"../store/userStoreTypes\";\n\nexport const defaultUserState: UserState = {\n  categories: [\"Famous\"],\n  time: [0, 0, 0],\n  notifPref: \"never\",\n  orderPref: \"outlived\"\n};\n\nexport default (\n  state: UserState = defaultUserState,\n  action: UserActionTypes\n): UserState => {\n  switch (action.type) {\n    case SET_BIRTH_DATE:\n      return {\n        ...state,\n        birth: action.date\n      };\n    case SET_BIRTH_TIME:\n      return {\n        ...state,\n        time: action.time\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.category]\n      };\n    case REMOVE_CATEGORY:\n      return {\n        ...state,\n        categories: state.categories.filter(cat => cat === action.category)\n      };\n    case SET_NOTIF_PREF:\n      return {\n        ...state,\n        notifPref: action.pref\n      };\n    case SET_ORDER_PREF:\n      return {\n        ...state,\n        orderPref: action.pref\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport databaseReducer, { defaultDatabaseState } from \"../reducers/database\";\nimport {\n  deserializeDatabaseState,\n  SerializedDatabaseState\n} from \"../store/databaseStoreTypes\";\nimport {\n  SerializedUserState,\n  deserializeUserState\n} from \"../store/userStoreTypes\";\nimport userReducer, { defaultUserState } from \"../reducers/user\";\n\nconst getDefaultState = () => ({\n  user: defaultUserState,\n  database: defaultDatabaseState\n});\n\nconst deserializeState = (state: {\n  database: SerializedDatabaseState;\n  user: SerializedUserState;\n}): AppState => ({\n  user: deserializeUserState(state.user),\n  database: deserializeDatabaseState(state.database)\n});\n\nconst getPersistedState = () => {\n  const storedState = localStorage.getItem(\"reduxState\");\n  const persistedState = storedState\n    ? deserializeState(JSON.parse(storedState))\n    : getDefaultState();\n  return persistedState;\n};\n\nconst rootReducer = combineReducers({\n  database: databaseReducer,\n  user: userReducer\n});\n\nexport default () => {\n  const store = createStore(rootReducer, getPersistedState());\n  store.subscribe(() => {\n    localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n  });\n  return store;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nconst ConnectedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(ConnectedApp, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home } from \"./components/home/Home\";\nimport { Settings } from \"./components/settings/Settings\";\nimport { Statistics } from \"./components/Statistics\";\nimport { Description } from \"./components/description/Description\";\n\nexport default () => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/statistics\" component={Statistics} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/description/:id\" component={Description} />\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}