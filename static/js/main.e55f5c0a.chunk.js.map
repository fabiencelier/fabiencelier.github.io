{"version":3,"sources":["api/query.js","responsive/Responsive.js","components/Tabular.js","date/date.js","components/Home.js","actions/database.js","components/settings/BirthSettings.js","actions/user.js","components/settings/NotificationSettings.js","components/settings/CategorySettings.js","components/settings/Settings.js","components/Statistics.js","components/Description.js","serviceWorker.js","reducers/database.js","reducers/user.js","store/configureStore.js","index.js","App.js"],"names":["request","url","cleanData","data","splice","map","row","id","days","birthDate","Date","deathDate","firstName","lastName","title","description","image","link","categories","split","exactDates","nationality","parseResult","sort","a","b","getAllDatabase","window","fetch","then","response","json","res","values","Desktop","children","query","Tab","props","className","to","path","style","color","active","type","icon","text","addTabs","WrappedComponent","zIndex","diffWithTodayInDays","date","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","PersonDescription","cat","key","ListItem","Item","width","state","Meta","avatar","size","src","href","HomeContent","people","dispatch","itemLayout","dataSource","this","database","renderItem","item","paddingTop","Component","buildYou","age","Home","connect","user","birth","length","BirthSettings","onChange","value","toDate","defaultValue","moment","suscribeToNotif","Notification","requestPermission","result","NotificationSettings","onClick","Group","console","log","pref","target","setPref","notifPref","CategorySettings","checked","includes","category","updateCategory","addCatagory","removeCatagory","Settings","Statistics","pad","num","s","substr","formatDate","Description","ownProps","filter","p","match","params","minHeight","backgroundColor","paddingBottom","subTitle","onBack","history","goBack","backIcon","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ready","showNotification","body","vibrate","tag","defaultDatabaseState","action","defaultUserState","ategory","getPersistedState","persistedState","localStorage","getItem","JSON","parse","obj","store","createStore","combineReducers","databaseReducer","userReducer","subscribe","setItem","stringify","getState","configureStore","ConnectedApp","exact","component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e55f5c0a.chunk.js","sourcesContent":["const request = {\n  spreadsheetId: '1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk',\n  range: 'database!A1:M',\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\",\n};\n\nconst parseResult = (row) => ({\n  id: row[0],\n  days: row[1],\n  birthDate: new Date(row[2]),\n  deathDate: new Date(row[3]),\n  firstName: row[4],\n  lastName: row[5],\n  title: row[6],\n  description: row[7],\n  image: row[8],\n  link: row[9],\n  categories: row[10].split(\",\"),\n  exactDates: row[11] === \"TRUE\",\n  nationality: row[12].split(\",\")\n})\n\nconst url=`https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`\n\nconst cleanData = data => {\n  data.splice(0,1)\n  return data.map(row => parseResult(row)).sort((a,b) => a.days - b.days)\n}\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then((response) =>{\n    return response.json().then(res => {\n      if (res) {\n        return cleanData(res.values);\n      }\n    })\n  })\n}\n\nexport const getFromId  = async (id) => {\n  const allData = await getAllDatabase()\n  return allData.filter(p => p.id === id)\n}","import React from 'react';\nimport MediaQuery from 'react-responsive';\n\nexport const Desktop = ({ children }) => (\n  <MediaQuery query=\"(min-device-width: 1224px)\">\n    {children}\n  </MediaQuery>\n)\n\nexport const Mobile = ({ children }) => (\n  <MediaQuery className=\"mobile\" query=\"(max-device-width: 1224px)\">\n    {children}\n  </MediaQuery>\n)","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\nimport { Desktop } from '../responsive/Responsive';\n\nconst Tab = (props) => (\n  <div>\n    <Link\n      className=\"Header-link\"\n      to={props.path}\n      style={{color: props.active ? \"white\" : \"grey\"}}\n    >\n        <Icon type={props.icon} /> <Desktop>{props.text}</Desktop>\n    </Link>\n  </div>\n)\n\nexport const addTabs = (WrappedComponent, active) => {\n  return () => (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div style={{zIndex: 10}}  className=\"flex-container\">\n          <Tab path=\"/\" icon=\"home\" text=\"Home\" active={active===\"home\"}/>\n          <Tab path=\"/statistics\" icon=\"bar-chart\" text=\"Statistics\" active={active===\"statistics\"}/>\n          <Tab path=\"/settings\" icon=\"setting\" text=\"Settings\" active={active===\"settings\"}/>\n          </div>\n        <WrappedComponent />\n      </div>\n    </div>\n  )\n}","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a, b) => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n}\n\nexport const diffWithTodayInDays = (date) => dateDiffInDays(date, new Date())","import React, { Component } from 'react';\nimport { Avatar, List, Tag } from 'antd';\nimport {getAllDatabase} from '../api/query';\nimport { addTabs } from './Tabular';\nimport { diffWithTodayInDays } from '../date/date';\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {fillDatabase} from '../actions/database';\n\nconst PersonDescription = (props) => (\n  <div>\n    <div style={{color: \"white\"}}>{props.days} days</div>\n    <div>\n      {props.categories.map(cat => <Tag key={cat} color=\"purple\">{cat}</Tag> )}\n    </div>\n  </div>\n)\n\nconst ListItem = (props) => (\n  <List.Item key={props.id}>\n    <Link \n      style={{width: '100%'}}\n      state={props}\n      to={props.id === \"you\" ? 'settings' : `description/${props.id}`}>\n      <List.Item.Meta\n        avatar={<Avatar size={64} src={props.image} />}\n        style={{width: '100%'}}\n        title={<a style={{color: \"white\"}} href={props.link}>{props.title}</a>}\n        description={<PersonDescription {...props}/>}/>\n    </Link>\n  </List.Item>\n)\n\nclass HomeContent extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = { people: [] };\n  }\n\n  componentDidMount() {\n    getAllDatabase().then(res => this.props.dispatch(fillDatabase(res)))\n  }\n\n  render() {\n    return (\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={this.props.database}\n        renderItem={item => <ListItem {...item}/>}\n        style={{paddingTop: \"100px\"}}\n      />\n    )\n  }\n}\n\nconst buildYou = age => ({\n  id: \"you\",\n  title: \"You\",\n  days: age,\n  image: \"http://www.accountingweb.co.uk/sites/all/modules/custom/sm_pp_user_profile/img/default-user.png\",\n  categories: [],\n  link: \"/settings\",\n})\n\nconst mapStateToProps = (state) => {\n  const age = diffWithTodayInDays(state.user.birth)\n  const database = state.database.length > 0 ? [buildYou(age), ...state.database] : []\n  return {\n    database,\n    age,\n  }\n}\n\nexport const Home = addTabs(connect(mapStateToProps)(HomeContent), \"home\");","export const fillDatabase = (data) => ({\n  type: 'FILL_DATABASE',\n  data\n});","import React from 'react';\nimport { DatePicker} from 'antd';\nimport moment from 'moment';\nimport {setBirthDate} from '../../actions/user';\n\nexport const BirthSettings = (props) => (\n  <div>\n    <h2 className=\"theme\">Birthdate</h2>\n    <DatePicker\n      onChange={ value => props.dispatch(setBirthDate(value.toDate()))}\n      defaultValue={moment(props.user.birth)}\n    />\n  </div>\n)","export const setBirthDate = (date) => ({\n  type: 'SET_BIRTH_DATE',\n  date,\n});\n\nexport const addCatagory = (category) => ({\n  type: 'ADD_CATEGORY',\n  category,\n});\n\nexport const removeCatagory = (category) => ({\n  type: 'REMOVE_CATEGORY',\n  category,\n});\n\n\nexport const setNotifPreferences = (pref) => ({\n  type: 'SET_NOTIF_PREF',\n  pref,\n});","import React from 'react';\nimport { Button, Radio } from 'antd';\nimport {setNotifPreferences} from '../../actions/user';\n\nconst suscribeToNotif = () => {\n  Notification.requestPermission().then(function(result) {\n    if(result === 'granted') {\n        //randomNotification();\n    }\n  });\n}\n\nconst setPref = (value,dispatch) => {\n  console.log(value)\n  dispatch(setNotifPreferences(value.target.value))\n}\n\nexport const NotificationSettings = (props) => (\n  <div>\n    <h2 className=\"theme\">Notifications Mode</h2>\n    <Button onClick={suscribeToNotif}>Allow notification</Button>\n    <Radio.Group\n      onChange={value => setPref(value, props.dispatch)}\n      value={props.user.notifPref}\n    >\n      <Radio value={\"outlive\"}>\n        When I outlive\n      </Radio>\n      <Radio value={\"never\"}>\n        Never\n      </Radio>\n    </Radio.Group>\n  </div>\n)","import React from 'react';\nimport { Checkbox } from 'antd';\nimport { addCatagory, removeCatagory} from '../../actions/user';\n\nconst categories = [\n  \"Famous\",\n  \"Actors\",\n  \"Artists\",\n  \"Politics\",\n  \"Science\",\n  \"Singers\",\n  \"Sport\",\n]\n\nconst updateCategory = (checked, category, dispatch) => {\n  checked ? dispatch(addCatagory(category)) : dispatch(removeCatagory(category))\n}\n\nexport const CategorySettings = (props) => (\n  <div>\n    <h2 className=\"theme\">Categories</h2>\n    <div style={{ width: '100%' }}    >\n      {categories.map(cat => \n        <Checkbox\n          checked={props.user.categories.includes(cat)}\n          onChange={value => updateCategory(value.target.checked, cat, props.dispatch,)}\n          key={cat}>\n          {cat}\n        </Checkbox>  \n      )}\n    </div>\n  </div>\n)","import React from 'react';\nimport { Divider } from 'antd';\nimport { addTabs } from '../Tabular';\nimport {connect} from 'react-redux';\nimport {BirthSettings} from './BirthSettings';\nimport {NotificationSettings} from './NotificationSettings'\nimport {CategorySettings} from './CategorySettings';\n\nconst SettingsContent = (props) => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <BirthSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <NotificationSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <CategorySettings {...props} />\n  </div>\n)\n\nconst mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport const Settings = addTabs(connect(mapStateToProps)(SettingsContent), \"settings\");\n","import React from 'react';\nimport { Statistic } from 'antd';\nimport { addTabs } from './Tabular';\nimport { diffWithTodayInDays } from '../date/date';\nimport {connect} from 'react-redux';\n\nconst StatisticsContent = (props) => (\n  <div>\n    <h1 style={{color: \"white\"}}>Statistics</h1>\n    <h3 style={{color: \"white\"}}>Survival Time</h3>\n    <Statistic title=\"Days\" value={props.age} />\n    <Statistic title=\"Hours\" value={props.age*24} />\n    <Statistic title=\"Minutes\" value={props.age*24*60} />\n    <Statistic title=\"Seconds\" value={props.age*24*60*60} />\n  </div>\n)\n\nconst mapStateToProps = (state) => ({\n  age : diffWithTodayInDays(state.user.birth)\n});\n\nexport const Statistics = addTabs(connect(mapStateToProps)(StatisticsContent), \"statistics\");\n","import React from 'react';\nimport { Avatar, Icon, PageHeader, Skeleton } from 'antd';\nimport {connect} from 'react-redux';\n\n\nfunction pad(num) {\n  var s = \"00\" + num;\n  return s.substr(s.length - 2);\n}\n\nconst formatDate = (date) => {\n  return `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())}`\n}\n\nconst DescriptionContent = (props) => (\n  <div style={{minHeight: \"100vh\", backgroundColor:\"#282c34\"}}>\n    <PageHeader\n      style={{\n        backgroundColor: \"black\",\n        color: \"white\",\n        paddingTop: \"1em\",\n        paddingBottom: \"1em\",\n      }}\n      title={props.description && <div style={{color: \"white\"}}>{props.description.title}</div>}\n      subTitle={props.description && <div style={{color: \"white\"}}>{`${props.description.days} days`}</div>}\n      onBack={() => props.history.goBack()}\n      backIcon={<Icon style={{color: \"white\"}} type=\"arrow-left\" />}\n      />\n      {\n        props.description\n        ? <div style={{backgroundColor:\"#282c34\", color:\"white\"}}>\n          <Avatar size={128} src={props.description.image} />\n          <p>Birth : {formatDate(props.description.birthDate)}</p>\n          <p>Death : {formatDate(props.description.deathDate)}</p>\n          {props.description.description && <p>{props.description.description}</p>}\n        </div>\n        : <Skeleton/>\n      }\n  </div>\n)\n\nconst mapStateToProps = (state, ownProps) => {\n  const description = state.database.filter(p => p.id === ownProps.match.params.id)[0]\n  console.log(\"description\", description)\n  console.log(state.database)\n  console.log(ownProps)\n  return {description}\n}\n\nexport const Description = connect(mapStateToProps)(DescriptionContent);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nfunction showNotification() {\n  console.log(\"checking for notif\")\n  Notification.requestPermission(function(result) {\n    if (result === 'granted') {\n      console.log(\"notif Allowed\")\n      navigator.serviceWorker.ready.then(function(registration) {\n        console.log(\"Notif !\")\n        registration.showNotification('Vibration Sample', {\n          body: 'Buzz! Buzz! 2',\n          icon: '../images/touch/chrome-touch-icon-192x192.png',\n          vibrate: [200, 100, 200, 100, 200, 100, 200],\n          tag: 'vibration-sample'\n        });\n      });\n    }\n  });\n}\n\n// if (Notification.permission == 'granted'){\nshowNotification()\n// }\n\n// var button = document.getElementById(\"notifications\");\n// button.addEventListener('click', function(e) {\n//     Notification.requestPermission().then(function(result) {\n//         if(result === 'granted') {\n//             randomNotification();\n//         }\n//     });\n// });","export const defaultDatabaseState = []\n\nexport default (state = defaultDatabaseState, action) => {\n  switch (action.type) {\n    case 'FILL_DATABASE':\n      return action.data;\n    default:\n      return state;\n  }\n}","export const defaultUserState = {\n  categories: [\"Famous\"],\n  birth: new Date(\"1993-10-12\"),\n  notifPref: \"never\"\n}\n\nexport default (state = defaultUserState, action) => {\n  switch (action.type) {\n    case 'SET_BIRTH_DATE':\n      return {\n        ...state,\n        birth: action.date,\n      };\n    case 'ADD_CATEGORY':\n      return {\n        ...state,\n        categories: [ ...state.categories, action.category]\n      }\n    case 'REMOVE_CATEGORY':\n      return {\n        ...state,\n        categories: state.categories.filter(cat => cat === action.ategory)\n      }\n    case 'SET_NOTIF_PREF': \n      return {\n        ...state,\n        notifPref: action.pref,\n      };\n    default:\n      return state;\n  }\n}","import { createStore, combineReducers } from 'redux';\nimport databaseReducer, {defaultDatabaseState} from '../reducers/database';\nimport userReducer, {defaultUserState} from '../reducers/user';\n\nconst getDefaultState = () => ({\n  user: defaultUserState,\n  database: defaultDatabaseState,\n})\n\nconst getPersistedState = () => {\n  const persistedState = localStorage.getItem('reduxState') \n      ? JSON.parse(localStorage.getItem('reduxState'))\n      : getDefaultState()\n  if (persistedState.database){\n    persistedState.database = persistedState.database.map( obj => ({\n      ...obj,\n      birthDate: new Date(obj.birthDate),\n      deathDate: new Date(obj.deathDate),\n    }))\n  }\n  if (persistedState.user) {\n    persistedState.user.birth = new Date(persistedState.user.birth)\n  }\n  return persistedState\n}\n\nexport default () => {\n\n  const store = createStore(\n    combineReducers({\n      database: databaseReducer,\n      user: userReducer,\n    }),\n    getPersistedState()\n  );\n\n  store.subscribe(()=>{\n    localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n  })\n\n  return store;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nconst ConnectedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(ConnectedApp, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { Home } from './components/Home';\nimport { Settings } from './components/settings/Settings';\nimport { Statistics } from './components/Statistics';\nimport { Description } from './components/Description';\n\nexport default (props) => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/statistics\" component={Statistics} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/description/:id\" component={Description} />\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}