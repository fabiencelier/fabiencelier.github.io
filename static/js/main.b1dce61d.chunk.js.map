{"version":3,"sources":["api/query.js","responsive/Responsive.js","components/Tabular.js","date/date.js","components/util/TagList.js","selecters/databaseSelecter.js","components/Home.js","actions/user.js","actions/database.js","components/settings/BirthSettings.js","components/settings/NotificationSettings.js","components/settings/CategorySettings.js","components/settings/Settings.js","components/Statistics.js","components/description/DescriptionBody.js","components/description/DescriptionHeader.js","components/description/Description.js","serviceWorker.js","reducers/database.js","reducers/user.js","store/configureStore.js","index.js","App.js"],"names":["request","url","cleanData","data","splice","map","row","id","days","birthDate","Date","deathDate","firstName","lastName","title","description","image","link","categories","split","exactDates","nationality","mannerOfDeath","causeOfDeath","imdbId","gender","occupations","deezerId","spotifyId","parseResult","sort","a","b","getAllDatabase","window","fetch","then","response","json","res","values","Desktop","children","query","Mobile","className","Tab","props","to","path","style","color","active","type","icon","text","addTabs","WrappedComponent","zIndex","diffWithTodayInDays","date","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","pad","num","s","substr","length","formatDate","TagList","cat","key","databaseSelecter","database","age","outlived","filter","el","objA","objB","parseInt","PersonDescription","ListItem","Item","width","state","Meta","avatar","src","height","objectFit","borderRadius","alt","OrderPicker","Group","value","order","buttonStyle","onChange","e","dispatch","pref","target","Button","HomeContent","people","paddingTop","this","itemLayout","dataSource","renderItem","item","Component","Home","connect","user","birth","orderPref","BirthSettings","toDate","defaultValue","moment","suscribeToNotif","Notification","requestPermission","result","console","log","navigator","serviceWorker","ready","registration","showNotification","body","vibrate","NotificationSettings","onClick","setPref","notifPref","CategorySettings","checked","includes","category","updateCategory","addCatagory","removeCatagory","Settings","Statistics","outterStyle","display","flexDirection","alignItems","marginTop","innerStyle","backgroundColor","maxWidth","textStyle","textAlign","textJustify","marginLeft","marginRight","Image","maxHeight","TopDescription","manner","cause","get_deezer_link","get_imdb_link","WikipediaLink","href","shape","size","DeezerLink","ImdbLink","DescriptionBody","DescriptionHeader","paddingBottom","subTitle","onBack","history","goBack","backIcon","Description","ownProps","p","match","params","minHeight","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","defaultDatabaseState","action","defaultUserState","ategory","getPersistedState","persistedState","localStorage","getItem","JSON","parse","obj","store","createStore","combineReducers","databaseReducer","userReducer","subscribe","setItem","stringify","getState","configureStore","ConnectedApp","exact","component","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b1dce61d.chunk.js","sourcesContent":["const request = {\n  spreadsheetId: \"1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk\",\n  range: \"database!A1:T\",\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\"\n};\n\nconst parseResult = row => ({\n  id: row[0],\n  days: row[1],\n  birthDate: new Date(row[2]),\n  deathDate: new Date(row[3]),\n  firstName: row[4],\n  lastName: row[5],\n  title: row[6],\n  description: row[7],\n  image: row[8],\n  link: row[9],\n  categories: row[10].split(\",\"),\n  exactDates: row[11] === \"TRUE\",\n  nationality: row[12] ? row[12].split(\",\") : [],\n  mannerOfDeath: row[13],\n  causeOfDeath: row[14],\n  imdbId: row[15],\n  gender: row[16],\n  occupations: row[17] ? row[17].split(\",\") : [],\n  deezerId: row[18],\n  spotifyId: row[19]\n});\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`;\n\nconst cleanData = data => {\n  data.splice(0, 1);\n  return data.map(row => parseResult(row)).sort((a, b) => a.days - b.days);\n};\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then(response => {\n    return response.json().then(res => {\n      if (res) {\n        return cleanData(res.values);\n      }\n    });\n  });\n};\n\nexport const getFromId = async id => {\n  const allData = await getAllDatabase();\n  return allData.filter(p => p.id === id);\n};\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\n\nexport const Desktop = ({ children }) => (\n  <MediaQuery query=\"(min-device-width: 1224px)\">{children}</MediaQuery>\n);\n\nexport const Mobile = ({ children }) => (\n  <MediaQuery className=\"mobile\" query=\"(max-device-width: 1224px)\">\n    {children}\n  </MediaQuery>\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport { Desktop } from \"../responsive/Responsive\";\n\nconst Tab = props => (\n  <div>\n    <Link\n      className=\"Header-link\"\n      to={props.path}\n      style={{ color: props.active ? \"white\" : \"grey\" }}\n    >\n      <Icon type={props.icon} /> <Desktop>{props.text}</Desktop>\n    </Link>\n  </div>\n);\n\nexport const addTabs = (WrappedComponent, active) => {\n  return () => (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div style={{ zIndex: 10 }} className=\"flex-container\">\n          <Tab path=\"/\" icon=\"home\" text=\"Home\" active={active === \"home\"} />\n          <Tab\n            path=\"/statistics\"\n            icon=\"bar-chart\"\n            text=\"Statistics\"\n            active={active === \"statistics\"}\n          />\n          <Tab\n            path=\"/settings\"\n            icon=\"setting\"\n            text=\"Settings\"\n            active={active === \"settings\"}\n          />\n        </div>\n        <WrappedComponent />\n      </div>\n    </div>\n  );\n};\n","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a, b) => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n};\n\nexport const diffWithTodayInDays = date => dateDiffInDays(date, new Date());\n\nfunction pad(num) {\n  var s = \"00\" + num;\n  return s.substr(s.length - 2);\n}\n\nexport const formatDate = date => {\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(\n    date.getDate()\n  )}`;\n};\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nexport const TagList = props => (\n  <div>\n    {props.categories.map(cat => (\n      <Tag key={cat} color=\"purple\">\n        {cat}\n      </Tag>\n    ))}\n  </div>\n);\n","export const databaseSelecter = (database = [], age, outlived) =>\n  database\n    .filter(el => (outlived ? el.days < age : el.days > age))\n    .sort((objA, objB) => {\n      const a = parseInt(objA.days, 10);\n      const b = parseInt(objB.days, 10);\n      return outlived ? a < b : a > b;\n    });\n","import React, { Component } from \"react\";\nimport { List, Radio } from \"antd\";\nimport { getAllDatabase } from \"../api/query\";\nimport { addTabs } from \"./Tabular\";\nimport { diffWithTodayInDays } from \"../date/date\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fillDatabase } from \"../actions/database\";\nimport { setOrderPreference } from \"../actions/user\";\nimport { TagList } from \"./util/TagList\";\nimport { databaseSelecter } from \"../selecters/databaseSelecter\";\n\nconst PersonDescription = props => (\n  <div>\n    <div style={{ color: \"white\" }}>{props.days} days</div>\n    <TagList categories={props.categories} />\n  </div>\n);\n\nconst ListItem = props => (\n  <List.Item key={props.id}>\n    <Link\n      style={{ width: \"100%\" }}\n      state={props}\n      to={props.id === \"you\" ? \"settings\" : `description/${props.id}`}\n    >\n      <List.Item.Meta\n        avatar={\n          <img\n            src={props.image}\n            style={{\n              width: 64,\n              height: 64,\n              objectFit: \"cover\",\n              borderRadius: \"10px\"\n            }}\n            alt={props.title}\n          />\n        }\n        style={{ width: \"100%\" }}\n        title={<span style={{ color: \"white\" }}>{props.title}</span>}\n        description={<PersonDescription {...props} />}\n      />\n    </Link>\n  </List.Item>\n);\n\nconst OrderPicker = props => (\n  <div>\n    <Radio.Group\n      value={props.order}\n      buttonStyle=\"solid\"\n      onChange={e => props.dispatch(setOrderPreference(e.target.value))}\n    >\n      <Radio.Button value=\"outlived\">Oulived</Radio.Button>\n      <Radio.Button value=\"next\">Next</Radio.Button>\n    </Radio.Group>\n  </div>\n);\n\nclass HomeContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { people: [] };\n  }\n\n  componentDidMount() {\n    getAllDatabase().then(res => this.props.dispatch(fillDatabase(res)));\n  }\n\n  render() {\n    return (\n      <div style={{ paddingTop: \"100px\" }}>\n        <h2 style={{ color: \"white\" }}>{this.props.age} days</h2>\n        <OrderPicker {...this.props} />\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={this.props.database}\n          renderItem={item => <ListItem {...item} />}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const age = diffWithTodayInDays(state.user.birth);\n  return {\n    database: databaseSelecter(\n      state.database,\n      age,\n      state.user.orderPref === \"outlived\"\n    ),\n    age,\n    order: state.user.orderPref\n  };\n};\n\nexport const Home = addTabs(connect(mapStateToProps)(HomeContent), \"home\");\n","export const setBirthDate = date => ({\n  type: \"SET_BIRTH_DATE\",\n  date\n});\n\nexport const addCatagory = category => ({\n  type: \"ADD_CATEGORY\",\n  category\n});\n\nexport const removeCatagory = category => ({\n  type: \"REMOVE_CATEGORY\",\n  category\n});\n\nexport const setNotifPreferences = pref => ({\n  type: \"SET_NOTIF_PREF\",\n  pref\n});\n\nexport const setOrderPreference = pref => ({\n  type: \"SET_ORDER_PREF\",\n  pref\n});\n","export const fillDatabase = data => ({\n  type: \"FILL_DATABASE\",\n  data\n});\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthDate } from \"../../actions/user\";\n\nexport const BirthSettings = props => (\n  <div>\n    <h2 className=\"theme\">Birthdate</h2>\n    <DatePicker\n      onChange={value => props.dispatch(setBirthDate(value.toDate()))}\n      defaultValue={moment(props.user.birth)}\n    />\n  </div>\n);\n","import React from \"react\";\nimport { Button, Radio } from \"antd\";\nimport { setNotifPreferences } from \"../../actions/user\";\n\nconst showNotification = age => {\n  console.log(\"Checking for notif\");\n  Notification.requestPermission(result => {\n    if (result === \"granted\") {\n      console.log(\"Notif Allowed\");\n      navigator.serviceWorker.ready.then(registration => {\n        console.log(\"Notif !\");\n        registration.showNotification(`${age} days !`, {\n          body: \"Congratulations ! Keep living !\",\n          icon: \"logo192.png\",\n          vibrate: [200, 100]\n        });\n      });\n    }\n  });\n};\n\nconst suscribeToNotif = age => {\n  Notification.requestPermission().then(function(result) {\n    if (result === \"granted\") {\n      showNotification(age);\n    }\n  });\n};\n\nconst setPref = (value, dispatch) => {\n  console.log(value);\n  dispatch(setNotifPreferences(value.target.value));\n};\n\nexport const NotificationSettings = props => (\n  <div>\n    <h2 className=\"theme\">Notifications Mode</h2>\n    <Button onClick={() => suscribeToNotif(props.user.age)}>\n      Allow notification\n    </Button>\n    <Radio.Group\n      onChange={value => setPref(value, props.dispatch)}\n      value={props.user.notifPref}\n    >\n      <Radio value={\"outlive\"}>When I outlive</Radio>\n      <Radio value={\"never\"}>Never</Radio>\n    </Radio.Group>\n  </div>\n);\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { addCatagory, removeCatagory } from \"../../actions/user\";\n\nconst categories = [\n  \"Famous\",\n  \"Actors\",\n  \"Artists\",\n  \"Politics\",\n  \"Science\",\n  \"Singers\",\n  \"Sport\"\n];\n\nconst updateCategory = (checked, category, dispatch) => {\n  checked\n    ? dispatch(addCatagory(category))\n    : dispatch(removeCatagory(category));\n};\n\nexport const CategorySettings = props => (\n  <div>\n    <h2 className=\"theme\">Categories</h2>\n    <div style={{ width: \"100%\" }}>\n      {categories.map(cat => (\n        <Checkbox\n          checked={props.user.categories.includes(cat)}\n          onChange={value =>\n            updateCategory(value.target.checked, cat, props.dispatch)\n          }\n          key={cat}\n        >\n          {cat}\n        </Checkbox>\n      ))}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Divider } from \"antd\";\nimport { addTabs } from \"../Tabular\";\nimport { connect } from \"react-redux\";\nimport { BirthSettings } from \"./BirthSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { CategorySettings } from \"./CategorySettings\";\n\nconst SettingsContent = props => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <BirthSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <NotificationSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <CategorySettings {...props} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport const Settings = addTabs(\n  connect(mapStateToProps)(SettingsContent),\n  \"settings\"\n);\n","import React from \"react\";\nimport { Statistic } from \"antd\";\nimport { addTabs } from \"./Tabular\";\nimport { diffWithTodayInDays } from \"../date/date\";\nimport { connect } from \"react-redux\";\n\nconst StatisticsContent = props => (\n  <div>\n    <h1 style={{ color: \"white\" }}>Statistics</h1>\n    <h3 style={{ color: \"white\" }}>Survival Time</h3>\n    <Statistic title=\"Days\" value={props.age} />\n    <Statistic title=\"Hours\" value={props.age * 24} />\n    <Statistic title=\"Minutes\" value={props.age * 24 * 60} />\n    <Statistic title=\"Seconds\" value={props.age * 24 * 60 * 60} />\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  age: diffWithTodayInDays(state.user.birth)\n});\n\nexport const Statistics = addTabs(\n  connect(mapStateToProps)(StatisticsContent),\n  \"statistics\"\n);\n","import React from \"react\";\nimport { formatDate } from \"../../date/date\";\nimport { TagList } from \"../util/TagList\";\nimport { Desktop, Mobile } from \"../../responsive/Responsive\";\nimport { Avatar } from \"antd\";\n\nconst outterStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"30px\"\n};\n\nconst innerStyle = {\n  backgroundColor: \"#282c34\",\n  color: \"white\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  maxWidth: \"1000px\"\n};\n\nconst textStyle = {\n  textAlign: \"justify\",\n  textJustify: \"inter-word\",\n  marginLeft: \"15px\",\n  marginRight: \"15px\"\n};\n\nconst Image = props => (\n  <div>\n    <Desktop>\n      <img src={props.image} style={{ maxHeight: \"500px\" }} alt={props.alt} />\n    </Desktop>\n    <Mobile>\n      <img src={props.image} style={{ maxHeight: \"200px\" }} alt={props.alt} />\n    </Mobile>\n  </div>\n);\n\nconst getCause = (manner, cause) =>\n  manner\n    ? cause\n      ? `${manner} (${cause})`\n      : manner\n    : cause\n    ? cause\n    : \"Unknown\";\n\nconst TopDescription = props => (\n  <div style={innerStyle}>\n    <Image image={props.image} alt={props.title} />\n    <h2 style={{ color: \"white\" }}>{props.title}</h2>\n    <h3 style={{ color: \"white\" }}>{props.days} days</h3>\n    <p>\n      Birth : {formatDate(props.birthDate)}\n      <br />\n      Death : {formatDate(props.deathDate)}\n      <br />\n      Cause : {getCause(props.mannerOfDeath, props.causeOfDeath)}\n    </p>\n  </div>\n);\n\nconst get_deezer_link = id => `https://www.deezer.com/us/artist/${id}`;\n\nconst get_imdb_link = id => `https://www.imdb.com/name/${id}`;\n\nconst WikipediaLink = ({ link }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={link}>\n      <Avatar shape=\"square\" size={64} src=\"/img/wikipedia-1024.png\" />\n    </a>\n  </div>\n);\n\nconst DeezerLink = ({ id }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_deezer_link(id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/deezer-1024.png\" />\n    </a>\n  </div>\n);\n\nconst ImdbLink = ({ id }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_imdb_link(id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/imdb-1024.png\" />\n    </a>\n  </div>\n);\n\nexport const DescriptionBody = props => (\n  <div style={outterStyle}>\n    <TopDescription {...props} />\n    <div style={innerStyle}>\n      <div style={textStyle}>\n        {props.description && <p>{props.description}</p>}\n      </div>\n      <TagList categories={props.categories} />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"space-around\",\n          marginTop: \"20px\"\n        }}\n      >\n        <WikipediaLink link={props.link} />\n        {props.deezerId && <DeezerLink id={props.deezerId} />}\n        {props.imdbId && <ImdbLink id={props.imdbId} />}\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Icon, PageHeader } from \"antd\";\n\nexport const DescriptionHeader = props => (\n  <PageHeader\n    style={{\n      backgroundColor: \"black\",\n      color: \"white\",\n      paddingTop: \"1em\",\n      paddingBottom: \"1em\"\n    }}\n    title={\n      props.description && (\n        <div style={{ color: \"white\" }}>{props.description.title}</div>\n      )\n    }\n    subTitle={\n      props.description && (\n        <div style={{ color: \"white\" }}>{`${props.description.days} days`}</div>\n      )\n    }\n    onBack={() => props.history.goBack()}\n    backIcon={<Icon style={{ color: \"white\" }} type=\"arrow-left\" />}\n  />\n);\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { DescriptionBody } from \"./DescriptionBody\";\nimport { DescriptionHeader } from \"./DescriptionHeader\";\n\nconst DescriptionContent = props => (\n  <div style={{ minHeight: \"100vh\", backgroundColor: \"#282c34\" }}>\n    <DescriptionHeader {...props} />\n    {props.description ? (\n      <DescriptionBody {...props.description} />\n    ) : (\n      <Skeleton />\n    )}\n  </div>\n);\n\nconst mapStateToProps = (state, ownProps) => {\n  const description = state.database.filter(\n    p => p.id === ownProps.match.params.id\n  )[0];\n  return { description };\n};\n\nexport const Description = connect(mapStateToProps)(DescriptionContent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const defaultDatabaseState = [];\n\nexport default (state = defaultDatabaseState, action) => {\n  switch (action.type) {\n    case \"FILL_DATABASE\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const defaultUserState = {\n  categories: [\"Famous\"],\n  birth: new Date(\"1993-10-12\"),\n  notifPref: \"never\",\n  orderPref: \"outlived\"\n};\n\nexport default (state = defaultUserState, action) => {\n  switch (action.type) {\n    case \"SET_BIRTH_DATE\":\n      return {\n        ...state,\n        birth: action.date\n      };\n    case \"ADD_CATEGORY\":\n      return {\n        ...state,\n        categories: [...state.categories, action.category]\n      };\n    case \"REMOVE_CATEGORY\":\n      return {\n        ...state,\n        categories: state.categories.filter(cat => cat === action.ategory)\n      };\n    case \"SET_NOTIF_PREF\":\n      return {\n        ...state,\n        notifPref: action.pref\n      };\n    case \"SET_ORDER_PREF\":\n      return {\n        ...state,\n        orderPref: action.pref\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport databaseReducer, { defaultDatabaseState } from \"../reducers/database\";\nimport userReducer, { defaultUserState } from \"../reducers/user\";\n\nconst getDefaultState = () => ({\n  user: defaultUserState,\n  database: defaultDatabaseState\n});\n\nconst getPersistedState = () => {\n  const persistedState = localStorage.getItem(\"reduxState\")\n    ? JSON.parse(localStorage.getItem(\"reduxState\"))\n    : getDefaultState();\n  if (persistedState.database) {\n    persistedState.database = persistedState.database.map(obj => ({\n      ...obj,\n      birthDate: new Date(obj.birthDate),\n      deathDate: new Date(obj.deathDate)\n    }));\n  }\n  if (persistedState.user) {\n    persistedState.user.birth = new Date(persistedState.user.birth);\n  }\n  return persistedState;\n};\n\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      database: databaseReducer,\n      user: userReducer\n    }),\n    getPersistedState()\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n  });\n\n  return store;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nconst ConnectedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(ConnectedApp, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home } from \"./components/Home\";\nimport { Settings } from \"./components/settings/Settings\";\nimport { Statistics } from \"./components/Statistics\";\nimport { Description } from \"./components/description/Description\";\n\nexport default props => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/statistics\" component={Statistics} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/description/:id\" component={Description} />\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}