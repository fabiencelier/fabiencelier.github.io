{"version":3,"sources":["api/query.js","components/Tabular.js","components/Home.js","date/date.js","components/Settings.js","components/Statistics.js","components/Description.js","serviceWorker.js","index.js","App.js"],"names":["request","url","cleanData","data","splice","map","row","id","days","birthDate","Date","deathDate","firstName","lastName","title","description","image","link","categories","split","exactDates","nationality","parseResult","sort","a","b","getAllDatabase","window","fetch","then","response","json","res","values","getFromId","allData","filter","p","addTabs","WrappedComponent","className","style","zIndex","to","type","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","you","PersonDescription","props","color","cat","key","ListItem","Item","width","state","Meta","avatar","size","src","href","Home","people","setState","itemLayout","dataSource","this","renderItem","item","Component","suscribeToNotif","Notification","requestPermission","result","Settings","onChange","onClick","Group","value","span","Statistics","Description","match","params","subTitle","onBack","history","goBack","console","log","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ready","showNotification","body","icon","vibrate","tag","ReactDOM","render","path","exact","component","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ae0e45a4.chunk.js","sourcesContent":["const request = {\n  spreadsheetId: '1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk',\n  range: 'database!A1:M',\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\",\n};\n\nconst parseResult = (row) => ({\n  id: row[0],\n  days: row[1],\n  birthDate: new Date(row[2]),\n  deathDate: new Date(row[3]),\n  firstName: row[4],\n  lastName: row[5],\n  title: row[6],\n  description: row[7],\n  image: row[8],\n  link: row[9],\n  categories: row[10].split(\",\"),\n  exactDates: row[11] === \"TRUE\",\n  nationality: row[12].split(\",\")\n})\n\nconst url=`https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`\n\nconst cleanData = data => {\n  data.splice(0,1)\n  return data.map(row => parseResult(row)).sort((a,b) => a.days - b.days)\n}\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then((response) =>{\n    return response.json().then(res => {\n      if (res) {\n        return cleanData(res.values);\n      }\n    })\n  })\n}\n\nexport const getFromId  = async (id) => {\n  const allData = await getAllDatabase()\n  return allData.filter(p => p.id === id)\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'antd';\n\n\nexport const addTabs = (WrappedComponent) => {\n  return () => (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <div style={{zIndex: 10}}  className=\"flex-container\">\n          <div>\n            <Link className=\"Header-link\" to=\"/\"><Icon type=\"home\" /> Home</Link>\n          </div>\n          <div>\n            <Link className=\"Header-link\" to=\"/statistics\"><Icon type=\"bar-chart\" /> Statistics</Link>\n          </div>\n          <div>\n            <Link className=\"Header-link\" to=\"/settings\"><Icon type=\"setting\" /> Settings</Link>\n          </div>\n        </div>\n        <WrappedComponent />\n      </div>\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport {  Avatar, List, Tag } from 'antd';\nimport {getAllDatabase} from '../api/query';\nimport { addTabs } from './Tabular';\nimport { diffWithTodayInDays } from '../date/date';\nimport { Link } from 'react-router-dom';\n\nconst birthDate = new Date(\"1993-10-12\")\nconst days = diffWithTodayInDays(birthDate)\nconst you = {\n  id: \"you\",\n  title: \"You\",\n  days: days,\n  image: \"http://www.accountingweb.co.uk/sites/all/modules/custom/sm_pp_user_profile/img/default-user.png\",\n  categories: [],\n  link: \"/settings\",\n}\n\nconst PersonDescription = (props) => (\n  <div>\n    <div style={{color: \"white\"}}>{props.days} days</div>\n    <div>\n      {props.categories.map(cat => <Tag key={cat} color=\"purple\">{cat}</Tag> )}\n    </div>\n  </div>\n)\n\nconst ListItem = (props) => (\n  <List.Item key={props.id}>\n    <Link \n      style={{width: '100%'}}\n      state={props}\n      to={props.id === \"you\" ? 'settings' : `description/${props.id}`}>\n      <List.Item.Meta\n        avatar={<Avatar size={64} src={props.image} />}\n        style={{width: '100%'}}\n        title={<a style={{color: \"white\"}} href={props.link}>{props.title}</a>}\n        description={<PersonDescription {...props}/>}/>\n    </Link>\n  </List.Item>\n)\n\nclass HomeContent extends Component{\n\n  constructor(props) {\n    super(props);\n    // Don't call this.setState() here!\n    this.state = { people: [] };\n  }\n\n  componentDidMount() {\n    getAllDatabase().then(res => this.setState({people: [you, ...res]}))\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>{days} days</h2>\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={this.state.people}\n          renderItem={item => <ListItem {...item}/>}\n        />\n      </div>\n    )\n  }\n}\n\nexport const Home = addTabs(HomeContent);","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a, b) => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n}\n\nexport const diffWithTodayInDays = (date) => dateDiffInDays(date, new Date())","import React from 'react';\nimport { Button, Checkbox, Col, DatePicker, Divider, Radio, Row } from 'antd';\nimport { addTabs } from './Tabular';\n\n\nconst suscribeToNotif = () => {\n  Notification.requestPermission().then(function(result) {\n    if(result === 'granted') {\n        //randomNotification();\n    }\n  });\n}\n\nconst SettingsContent = (props) => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <div>\n      <h2 className=\"theme\">Birthdate</h2>\n      <DatePicker onChange={() => {}} />\n    </div>\n    <Divider type=\"horizontal\" />\n    <div>\n      <h2 className=\"theme\">Notifications Mode</h2>\n      <Button onClick={suscribeToNotif}>Allow notification</Button>\n      <Radio.Group onChange={() => {}} value={1}>\n        <Radio value={1}>\n          When I outlive\n        </Radio>\n        <Radio value={2}>\n          Recap once a week\n        </Radio>\n        <Radio value={3}>\n          Never\n        </Radio>\n      </Radio.Group>\n    </div>\n    <Divider type=\"horizontal\" />\n    <div>\n      <h2 className=\"theme\">Categories</h2>\n      <Checkbox.Group style={{ width: '100%' }} onChange={() => {}}>\n        <Row>\n          <Col span={12}>\n            <Checkbox>Famous</Checkbox>\n          </Col>\n          <Col span={12}>\n          <Checkbox>Actors</Checkbox>\n          </Col>\n          <Col span={12}>\n            <Checkbox>Artists</Checkbox>\n          </Col>\n          <Col span={12}>\n            <Checkbox>Politics</Checkbox>\n            </Col>\n          <Col span={12}>\n            <Checkbox>Science</Checkbox>\n            </Col>\n          <Col span={12}>\n            <Checkbox>Singers</Checkbox>\n            </Col>\n          <Col span={12}>\n            <Checkbox>Sport</Checkbox>\n          </Col>\n        </Row>\n      </Checkbox.Group>\n    </div>\n  </div>\n)\n\nexport const Settings = addTabs(SettingsContent);\n","import React from 'react';\nimport { Statistic } from 'antd';\nimport { addTabs } from './Tabular';\n\n\nconst StatisticsContent = (props) => (\n  <div>\n    <h1 style={{color: \"white\"}}>Statistics</h1>\n    <h3 style={{color: \"white\"}}>Survival Time</h3>\n    <Statistic title=\"Days\" value={31893} />\n    <Statistic title=\"Hours\" value={31893*24} />\n    <Statistic title=\"Minutes\" value={31893*24*60} />\n    <Statistic title=\"Seconds\" value={31893*24*60*60} />\n  </div>\n)\n\nexport const Statistics = addTabs(StatisticsContent);\n","import React, { Component } from 'react';\nimport { Avatar, PageHeader } from 'antd';\nimport { getFromId } from '../api/query';\n\n\nexport class Description extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {  };\n  }\n\n  componentDidMount() {\n    getFromId(this.props.match.params.id).then(res => this.setState({description: res[0]}))\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.description &&\n        <div>\n          <PageHeader\n            title={this.state.description.title}\n            subTitle={`${this.state.description.days} days`}\n            onBack={() => this.props.history.goBack()}\n            />\n          <Avatar size={128} src={this.state.description.image} />\n\n        </div>}\n        <p>{console.log(this.props)}</p>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nfunction showNotification() {\n  console.log(\"checking for notif\")\n  Notification.requestPermission(function(result) {\n    if (result === 'granted') {\n      console.log(\"notif Allowed\")\n      navigator.serviceWorker.ready.then(function(registration) {\n        console.log(\"Notif !\")\n        registration.showNotification('Vibration Sample', {\n          body: 'Buzz! Buzz! 2',\n          icon: '../images/touch/chrome-touch-icon-192x192.png',\n          vibrate: [200, 100, 200, 100, 200, 100, 200],\n          tag: 'vibration-sample'\n        });\n      });\n    }\n  });\n}\n\n// if (Notification.permission == 'granted'){\nshowNotification()\n// }\n\n// var button = document.getElementById(\"notifications\");\n// button.addEventListener('click', function(e) {\n//     Notification.requestPermission().then(function(result) {\n//         if(result === 'granted') {\n//             randomNotification();\n//         }\n//     });\n// });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport { Home } from './components/Home';\nimport { Settings } from './components/Settings';\nimport { Statistics } from './components/Statistics';\nimport { Description } from './components/Description';\n\nexport default (props) => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/statistics\" component={Statistics} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/description/:id\" component={Description} />\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}