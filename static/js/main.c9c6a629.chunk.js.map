{"version":3,"sources":["api/person.ts","api/query.ts","responsive/Responsive.tsx","components/util/ConnectedBirthPicker.tsx","actions/user.ts","actions/userTypes.ts","components/welcome/WelcomeHome.tsx","components/Tabular.tsx","date/date.ts","selecters/databaseSelecter.ts","components/home/OrderPicker.tsx","components/util/TagList.tsx","components/home/HomeItemList.tsx","components/home/InfiniteList.tsx","components/home/Home.tsx","actions/database.ts","actions/databaseTypes.ts","components/settings/BirthSettings.tsx","components/settings/NotificationSettings.tsx","components/settings/CategorySettings.tsx","components/settings/Settings.tsx","components/Statistics.tsx","components/description/DescriptionBody.tsx","components/description/DescriptionHeader.tsx","components/description/Description.tsx","serviceWorker.js","reducers/database.ts","store/databaseStoreTypes.ts","store/userStoreTypes.ts","reducers/user.ts","store/configureStore.ts","index.tsx","App.tsx"],"names":["Person","id","days","birthDate","deathDate","firstName","lastName","title","description","image","link","categories","exactDates","nationality","mannerOfDeath","causeOfDeath","imdbId","gender","occupations","deezerId","spotifyId","request","url","getAllDatabase","a","window","fetch","then","response","json","res","values","map","per","row","Date","split","Desktop","props","query","children","Mobile","className","defaultBirthDate","ConnectedBirthPicker","onChange","value","dispatch","type","date","toDate","defaultValue","moment","WelcomeHome","undefined","Tab","to","path","style","color","active","icon","text","mapStateToProps","state","isNew","user","birth","addTabs","args","connect","zIndex","WrappedComponent","innerAddTabs","diffWithTodayInDays","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","pad","num","s","substr","length","formatDate","databaseSelecter","database","age","outlived","filter","el","parseInt","sort","objA","objB","OrderPicker","Group","order","buttonStyle","e","pref","target","Button","TagList","cat","key","PersonDescription","ListItem","Item","width","Meta","avatar","src","height","objectFit","borderRadius","marginLeft","alt","baseSize","createStateFromProps","allPeople","people","displayedPeople","index","hasMore","loading","InfiniteList","handleInfiniteOnLoad","setState","currentSize","render","initialLoad","pageStart","loadMore","useWindow","itemLayout","dataSource","renderItem","item","React","Component","HomeContent","paddingTop","maxWidth","data","Home","orderPref","BirthSettings","time","getHours","getMinutes","getSeconds","onTimeChange","setHours","setMinutes","setSeconds","suscribeToNotif","Notification","requestPermission","result","console","log","navigator","serviceWorker","ready","registration","showNotification","body","vibrate","NotificationSettings","onClick","setPref","notifPref","CategorySettings","checked","includes","category","updateCategory","addCatagory","removeCatagory","Settings","createState","now","seconds","minutes","hours","StatisticsContent","interval","setInterval","clearInterval","this","Statistics","outterStyle","display","flexDirection","alignItems","marginTop","innerStyle","backgroundColor","textStyle","textAlign","textJustify","marginRight","Image","maxHeight","TopDescription","manner","cause","WikipediaLink","href","shape","size","DeezerLink","ImdbLink","DescriptionBody","DescriptionHeader","paddingBottom","subTitle","onBack","history","goBack","backIcon","Description","ownProps","p","match","params","minHeight","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","defaultDatabaseState","deserializeDatabaseState","obj","serialized","deserializeUserState","defaultUserState","getPersistedState","storedState","localStorage","getItem","persistedState","JSON","parse","rootReducer","combineReducers","action","store","createStore","subscribe","setItem","stringify","getState","configureStore","ConnectedApp","exact","component","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c9c6a629.chunk.js","sourcesContent":["export class Person {\n  constructor(\n    public id: string,\n    public days: string,\n    public birthDate: Date,\n    public deathDate: Date,\n    public firstName: string,\n    public lastName: string,\n    public title: string,\n    public description: string,\n    public image: string,\n    public link: string,\n    public categories: string[],\n    public exactDates: boolean,\n    public nationality: string[],\n    public mannerOfDeath: string,\n    public causeOfDeath: string,\n    public imdbId: string,\n    public gender: string,\n    public occupations: string[],\n    public deezerId: string,\n    public spotifyId: string\n  ) {}\n}\n\nexport const getPerson = (row: string[]) =>\n  new Person(\n    row[0],\n    row[1],\n    new Date(row[2]),\n    new Date(row[3]),\n    row[4],\n    row[5],\n    row[6],\n    row[7],\n    row[8],\n    row[9],\n    row[10] ? row[10].split(\",\") : [],\n    row[11] === \"TRUE\",\n    row[12] ? row[12].split(\",\") : [],\n    row[13],\n    row[14],\n    row[15],\n    row[16],\n    row[17] ? row[17].split(\",\") : [],\n    row[18],\n    row[19]\n  );\n","import { getPerson, Person } from \"../api/person\";\n\nconst request = {\n  spreadsheetId: \"1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk\",\n  range: \"database!A1:T\",\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\"\n};\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`;\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then(response => {\n    return response.json().then(res => {\n      if (res) {\n        return res.values.map((per: string[]) => getPerson(per));\n      }\n    });\n  });\n};\n\nexport const getFromId = async (id: string) => {\n  const allData = await getAllDatabase();\n  if (allData === undefined) {\n    return undefined;\n  }\n  return allData.filter((p: Person) => p.id === id);\n};\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\n\nexport const Desktop = (props: { children: JSX.Element | string }) => (\n  <MediaQuery query=\"(min-device-width: 1224px)\">{props.children}</MediaQuery>\n);\n\nexport const Mobile = (props: { children: JSX.Element | string }) => (\n  <MediaQuery className=\"mobile\" query=\"(max-device-width: 1224px)\">\n    {props.children}\n  </MediaQuery>\n);\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthDate } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\n\nconst defaultBirthDate = new Date(\"1993-10-12\");\n\nexport const ConnectedBirthPicker = (props: {\n  value: Date | undefined;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <DatePicker\n      onChange={value =>\n        value !== null && props.dispatch(setBirthDate(value.toDate()))\n      }\n      defaultValue={moment(props.value ? props.value : defaultBirthDate)}\n    />\n  </div>\n);\n","import {\n  SET_BIRTH_DATE,\n  SET_BIRTH_TIME,\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes\n} from \"./userTypes\";\n\nexport const setBirthDate = (date: Date): UserActionTypes => ({\n  type: SET_BIRTH_DATE,\n  date\n});\n\nexport const setBirthTime = (\n  time: [number, number, number]\n): UserActionTypes => ({\n  type: SET_BIRTH_TIME,\n  time\n});\n\nexport const addCatagory = (category: string): UserActionTypes => ({\n  type: ADD_CATEGORY,\n  category\n});\n\nexport const removeCatagory = (category: string): UserActionTypes => ({\n  type: REMOVE_CATEGORY,\n  category\n});\n\nexport const setNotifPreferences = (pref: string): UserActionTypes => ({\n  type: SET_NOTIF_PREF,\n  pref\n});\n\nexport const setOrderPreference = (pref: string): UserActionTypes => ({\n  type: SET_ORDER_PREF,\n  pref\n});\n","export const SET_BIRTH_DATE = \"SET_BIRTH_DATE\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const REMOVE_CATEGORY = \"REMOVE_CATEGORY\";\nexport const SET_NOTIF_PREF = \"SET_NOTIF_PREF\";\nexport const SET_ORDER_PREF = \"SET_ORDER_PREF\";\nexport const SET_BIRTH_TIME = \"SET_BIRTH_TIME\";\n\ninterface SetBirthDateAction {\n  type: typeof SET_BIRTH_DATE;\n  date: Date;\n}\n\ninterface SetBirthTimeAction {\n  type: typeof SET_BIRTH_TIME;\n  time: [number, number, number];\n}\n\ninterface AddCategoryAction {\n  type: typeof ADD_CATEGORY;\n  category: string;\n}\n\ninterface RemoveCategoryAction {\n  type: typeof REMOVE_CATEGORY;\n  category: string;\n}\n\ninterface SetNotifPrefAction {\n  type: typeof SET_NOTIF_PREF;\n  pref: string;\n}\n\ninterface SetOrderPrefAction {\n  type: typeof SET_ORDER_PREF;\n  pref: string;\n}\n\nexport type UserActionTypes =\n  | SetBirthDateAction\n  | AddCategoryAction\n  | RemoveCategoryAction\n  | SetNotifPrefAction\n  | SetOrderPrefAction\n  | SetBirthTimeAction;\n","import React from \"react\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { Dispatch } from \"redux\";\n\nexport const WelcomeHome = (props: { dispatch: Dispatch }) => (\n  <div>\n    <h1 className=\"theme\">Outlive</h1>\n    <h3 className=\"theme\">Select your birth date to start</h3>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={undefined} />\n  </div>\n);\n","import React, { ComponentType } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport { Desktop } from \"../responsive/Responsive\";\nimport { WelcomeHome } from \"./welcome/WelcomeHome\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { AppState } from \"../store/configureStore\";\n\nconst Tab = (props: {\n  active: boolean;\n  path: string;\n  icon: string;\n  text: string;\n}) => (\n  <div>\n    <Link\n      className=\"Header-link\"\n      to={props.path}\n      style={{ color: props.active ? \"white\" : \"grey\" }}\n    >\n      <Icon type={props.icon} /> <Desktop>{props.text}</Desktop>\n    </Link>\n  </div>\n);\n\ninterface HocArguments {\n  WrappedComponent: ComponentType;\n  active: string;\n}\n\nconst innerAddTabs = (args: HocArguments) => {\n  return (props: { isNew: boolean; dispatch: Dispatch }) => {\n    if (props.isNew) {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <WelcomeHome dispatch={props.dispatch} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <div style={{ zIndex: 10 }} className=\"flex-container\">\n              <Tab\n                path=\"/\"\n                icon=\"home\"\n                text=\"Home\"\n                active={args.active === \"home\"}\n              />\n              <Tab\n                path=\"/statistics\"\n                icon=\"bar-chart\"\n                text=\"Statistics\"\n                active={args.active === \"statistics\"}\n              />\n              <Tab\n                path=\"/settings\"\n                icon=\"setting\"\n                text=\"Settings\"\n                active={args.active === \"settings\"}\n              />\n            </div>\n            <args.WrappedComponent />\n          </div>\n        </div>\n      );\n    }\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  isNew: state.user.birth ? false : true\n});\n\nexport const addTabs = (args: HocArguments) =>\n  connect(mapStateToProps)(innerAddTabs(args));\n","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a: Date, b: Date): number => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n};\n\nexport const diffWithTodayInDays = (date: Date | undefined): number =>\n  date ? dateDiffInDays(date, new Date()) : 0;\n\nfunction pad(num: number): string {\n  var s = \"00\" + num;\n  return s.substr(s.length - 2);\n}\n\nexport const formatDate = (date: Date) => {\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(\n    date.getDate()\n  )}`;\n};\n","import { Person } from \"../api/person\";\n\nexport const databaseSelecter = (\n  database: Person[] = [],\n  age: number,\n  outlived: boolean\n) =>\n  database\n    .filter(el =>\n      outlived ? parseInt(el.days, 10) < age : parseInt(el.days, 10) > age\n    )\n    .sort((objA, objB) => {\n      const a = parseInt(objA.days, 10);\n      const b = parseInt(objB.days, 10);\n      return outlived ? (a < b ? 1 : -1) : a > b ? 1 : -1;\n    });\n","import React from \"react\";\nimport { Radio } from \"antd\";\nimport { setOrderPreference } from \"../../actions/user\";\nimport { HomeProps } from \"./Home\";\n\nexport const OrderPicker = (props: HomeProps) => (\n  <div>\n    <Radio.Group\n      value={props.order}\n      buttonStyle=\"solid\"\n      onChange={e => props.dispatch(setOrderPreference(e.target.value))}\n    >\n      <Radio.Button value=\"outlived\">Oulived</Radio.Button>\n      <Radio.Button value=\"next\">Next</Radio.Button>\n    </Radio.Group>\n  </div>\n);\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nexport const TagList = (props: { categories: string[] }) => (\n  <div>\n    {props.categories.map(cat => (\n      <Tag key={cat} color=\"purple\">\n        {cat}\n      </Tag>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport { List } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { TagList } from \"../util/TagList\";\nimport { Person } from \"../../api/person\";\n\nconst PersonDescription = (props: Person) => (\n  <div>\n    <div style={{ color: \"white\" }}>{props.days} days</div>\n    <TagList categories={props.categories} />\n  </div>\n);\n\nexport const ListItem = (props: Person) => (\n  <List.Item key={props.id}>\n    <Link\n      style={{ width: \"100%\" }}\n      to={props.id === \"you\" ? \"settings\" : `description/${props.id}`}\n    >\n      <List.Item.Meta\n        avatar={\n          <img\n            src={props.image}\n            style={{\n              width: 64,\n              height: 64,\n              objectFit: \"cover\",\n              borderRadius: \"10px\",\n              marginLeft: \"15px\"\n            }}\n            alt={props.title}\n          />\n        }\n        style={{ width: \"100%\" }}\n        title={<span style={{ color: \"white\" }}>{props.title}</span>}\n        description={<PersonDescription {...props} />}\n      />\n    </Link>\n  </List.Item>\n);\n","import InfiniteScroll from \"react-infinite-scroller\";\nimport { ListItem } from \"./HomeItemList\";\nimport { List, Spin } from \"antd\";\nimport React from \"react\";\nimport { Person } from \"../../api/person\";\n\nconst baseSize = 10;\n\ninterface InfiniteListState {\n  allPeople: Person[];\n  displayedPeople: Person[];\n  hasMore: boolean;\n  loading: boolean;\n}\n\ninterface InfiniteListProps {\n  people: Person[];\n}\n\nconst createStateFromProps = (props: InfiniteListProps): InfiniteListState => ({\n  allPeople: props.people,\n  displayedPeople: props.people.filter((el, index) => index < baseSize),\n  hasMore: props.people.length >= baseSize,\n  loading: false\n});\n\nexport class InfiniteList extends React.Component<\n  InfiniteListProps,\n  InfiniteListState\n> {\n  constructor(props: InfiniteListProps) {\n    super(props);\n    this.state = createStateFromProps(props);\n  }\n\n  static getDerivedStateFromProps(\n    props: InfiniteListProps,\n    state: InfiniteListState\n  ) {\n    // Only update the state on new props\n    if (props.people !== state.allPeople) {\n      return createStateFromProps(props);\n    }\n    return null;\n  }\n\n  handleInfiniteOnLoad = () => {\n    this.setState({\n      loading: true\n    });\n    const currentSize = this.state.displayedPeople.length;\n    if (currentSize === this.state.allPeople.length) {\n      this.setState({\n        hasMore: false,\n        loading: false\n      });\n      return;\n    }\n    this.setState({\n      displayedPeople: this.state.allPeople.filter(\n        (el, index) => index < currentSize + baseSize\n      ),\n      loading: false\n    });\n  };\n\n  render = () => (\n    <InfiniteScroll\n      initialLoad={false}\n      pageStart={0}\n      loadMore={this.handleInfiniteOnLoad}\n      hasMore={!this.state.loading && this.state.hasMore}\n      useWindow={true}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={this.state.displayedPeople}\n        renderItem={item => <ListItem {...item} />}\n      >\n        {this.state.loading && this.state.hasMore && (\n          <div className=\"demo-loading-container\">\n            <Spin />\n          </div>\n        )}\n      </List>\n    </InfiniteScroll>\n  );\n}\n","import React, { Component } from \"react\";\nimport { getAllDatabase } from \"../../api/query\";\nimport { addTabs } from \"../Tabular\";\nimport { diffWithTodayInDays } from \"../../date/date\";\nimport { connect } from \"react-redux\";\nimport { fillDatabase } from \"../../actions/database\";\nimport { databaseSelecter } from \"../../selecters/databaseSelecter\";\nimport { AppState } from \"../../store/configureStore\";\nimport { Dispatch } from \"redux\";\nimport { DatabaseStore } from \"../../store/databaseStoreTypes\";\nimport { OrderPicker } from \"./OrderPicker\";\nimport { InfiniteList } from \"./InfiniteList\";\n\nexport interface HomeProps {\n  database: DatabaseStore;\n  age: number;\n  order: string;\n  dispatch: Dispatch;\n}\n\nclass HomeContent extends Component<HomeProps> {\n  componentDidMount() {\n    getAllDatabase().then(res => res && this.props.dispatch(fillDatabase(res)));\n  }\n\n  render = () => (\n    <div style={{ width: \"100%\", paddingTop: \"100px\", maxWidth: \"400px\" }}>\n      <h2 style={{ color: \"white\" }}>{this.props.age} days</h2>\n      <OrderPicker {...this.props} />\n      <InfiniteList people={this.props.database} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const age = diffWithTodayInDays(state.user.birth);\n  return {\n    database: databaseSelecter(\n      state.database,\n      age,\n      state.user.orderPref === \"outlived\"\n    ),\n    age,\n    order: state.user.orderPref\n  };\n};\n\nexport const Home = addTabs({\n  WrappedComponent: connect(mapStateToProps)(HomeContent),\n  active: \"home\"\n});\n","import { Person } from \"../api/person\";\nimport { DatabaseActionType, FILL_DATABASE } from \"./databaseTypes\";\n\nexport const fillDatabase = (data: Person[]): DatabaseActionType => ({\n  type: FILL_DATABASE,\n  data\n});\n","import { Person } from \"../api/person\";\nexport const FILL_DATABASE = \"FILL_DATABASE\";\n\ninterface FillDatabaseAction {\n  type: typeof FILL_DATABASE;\n  data: Person[];\n}\n\nexport type DatabaseActionType = FillDatabaseAction;\n","import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { TimePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthTime } from \"../../actions/user\";\n\nconst createMoment = (\n  date: Date,\n  time: [number, number, number]\n): moment.Moment => {\n  date.setHours(time[0]);\n  date.setMinutes(time[1]);\n  date.setSeconds(time[2]);\n  return moment(date);\n};\n\nconst onTimeChange = (moment: moment.Moment, dispatch: Dispatch) => {\n  const date = moment.toDate();\n  dispatch(\n    setBirthTime([date.getHours(), date.getMinutes(), date.getSeconds()])\n  );\n};\n\nexport const BirthSettings = (props: {\n  user: { birth?: Date; time: [number, number, number] };\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Birthdate</h2>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={props.user.birth} />\n    <TimePicker\n      onChange={value => onTimeChange(value, props.dispatch)}\n      value={\n        props.user.birth && createMoment(props.user.birth, props.user.time)\n      }\n    />\n  </div>\n);\n","import React from \"react\";\nimport { Button, Radio } from \"antd\";\nimport { setNotifPreferences } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { diffWithTodayInDays } from \"../../date/date\";\n\nconst showNotification = (age: number) => {\n  console.log(\"Checking for notif\");\n  Notification.requestPermission(result => {\n    if (result === \"granted\") {\n      console.log(\"Notif Allowed\");\n      navigator.serviceWorker.ready.then(registration => {\n        console.log(\"Notif !\");\n        registration.showNotification(`${age} days !`, {\n          body: \"Congratulations ! Keep living !\",\n          icon: \"logo192.png\",\n          vibrate: [200, 100]\n        });\n      });\n    }\n  });\n};\n\nconst suscribeToNotif = (age: number) => {\n  Notification.requestPermission().then(function(result) {\n    if (result === \"granted\") {\n      showNotification(age);\n    }\n  });\n};\n\nconst setPref = (value: string, dispatch: Dispatch) => {\n  dispatch(setNotifPreferences(value));\n};\n\nexport const NotificationSettings = (props: {\n  user: UserState;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Notifications Mode</h2>\n    <Button\n      onClick={() => suscribeToNotif(diffWithTodayInDays(props.user.birth))}\n    >\n      Allow notification\n    </Button>\n    <Radio.Group\n      onChange={e => setPref(e.target.value, props.dispatch)}\n      value={props.user.notifPref}\n    >\n      <Radio value={\"outlive\"}>When I outlive</Radio>\n      <Radio value={\"never\"}>Never</Radio>\n    </Radio.Group>\n  </div>\n);\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { addCatagory, removeCatagory } from \"../../actions/user\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst categories = [\n  \"Famous\",\n  \"Actors\",\n  \"Artists\",\n  \"Politics\",\n  \"Science\",\n  \"Singers\",\n  \"Sport\"\n];\n\nconst updateCategory = (\n  checked: boolean,\n  category: string,\n  dispatch: Dispatch\n) => {\n  checked\n    ? dispatch(addCatagory(category))\n    : dispatch(removeCatagory(category));\n};\n\nexport const CategorySettings = (props: {\n  user: UserState;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Categories</h2>\n    <div style={{ width: \"100%\" }}>\n      {categories.map(cat => (\n        <Checkbox\n          checked={props.user.categories.includes(cat)}\n          onChange={value =>\n            updateCategory(value.target.checked, cat, props.dispatch)\n          }\n          key={cat}\n        >\n          {cat}\n        </Checkbox>\n      ))}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Divider } from \"antd\";\nimport { addTabs } from \"../Tabular\";\nimport { connect } from \"react-redux\";\nimport { BirthSettings } from \"./BirthSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { CategorySettings } from \"./CategorySettings\";\nimport { AppState } from \"../../store/configureStore\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst SettingsContent = (props: { user: UserState; dispatch: Dispatch }) => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <BirthSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <NotificationSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <CategorySettings {...props} />\n  </div>\n);\n\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user\n});\n\nexport const Settings = addTabs({\n  WrappedComponent: connect(mapStateToProps)(SettingsContent),\n  active: \"settings\"\n});\n","import React from \"react\";\nimport { Statistic } from \"antd\";\nimport { addTabs } from \"./Tabular\";\nimport { diffWithTodayInDays } from \"../date/date\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../store/configureStore\";\n\ninterface StatisticsProps {\n  age: number;\n  time: [number, number, number];\n}\n\nconst createState = (age: number, time: [number, number, number]) => {\n  const now = new Date();\n  const seconds =\n    ((age * 24 + now.getHours() - time[0]) * 60 + now.getMinutes() - time[1]) *\n      60 +\n    now.getSeconds() -\n    time[2];\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nclass StatisticsContent extends React.Component<StatisticsProps> {\n  interval: NodeJS.Timeout = setInterval(\n    () => this.setState(createState(this.props.age, this.props.time)),\n    250\n  );\n\n  state = createState(this.props.age, this.props.time);\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render = () => (\n    <div>\n      <h1 style={{ color: \"white\" }}>Statistics</h1>\n      <h3 style={{ color: \"white\" }}>Survival Time</h3>\n      <Statistic title=\"Days\" value={this.props.age} />\n      <Statistic title=\"Hours\" value={this.state.hours} />\n      <Statistic title=\"Minutes\" value={this.state.minutes} />\n      <Statistic title=\"Seconds\" value={this.state.seconds} />\n    </div>\n  );\n}\nconst mapStateToProps = (state: AppState) => ({\n  age: diffWithTodayInDays(state.user.birth),\n  time: state.user.time\n});\n\nexport const Statistics = addTabs({\n  WrappedComponent: connect(mapStateToProps)(StatisticsContent),\n  active: \"statistics\"\n});\n","import React, { CSSProperties } from \"react\";\nimport { formatDate } from \"../../date/date\";\nimport { TagList } from \"../util/TagList\";\nimport { Desktop, Mobile } from \"../../responsive/Responsive\";\nimport { Avatar } from \"antd\";\nimport { Person } from \"../../api/person\";\n\nconst outterStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"30px\"\n};\n\nconst innerStyle: CSSProperties = {\n  backgroundColor: \"#282c34\",\n  color: \"white\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  maxWidth: \"1000px\"\n};\n\nconst textStyle: CSSProperties = {\n  textAlign: \"justify\",\n  textJustify: \"inter-word\",\n  marginLeft: \"15px\",\n  marginRight: \"15px\"\n};\n\nconst Image = (props: { image: string; alt: string }) => (\n  <div>\n    <Desktop>\n      <img src={props.image} style={{ maxHeight: \"500px\" }} alt={props.alt} />\n    </Desktop>\n    <Mobile>\n      <img src={props.image} style={{ maxHeight: \"200px\" }} alt={props.alt} />\n    </Mobile>\n  </div>\n);\n\nconst getCause = (manner: string, cause: string) =>\n  manner\n    ? cause\n      ? `${manner} (${cause})`\n      : manner\n    : cause\n    ? cause\n    : \"Unknown\";\n\nconst TopDescription = (props: Person) => (\n  <div style={innerStyle}>\n    <Image image={props.image} alt={props.title} />\n    <h2 style={{ color: \"white\" }}>{props.title}</h2>\n    <h3 style={{ color: \"white\" }}>{props.days} days</h3>\n    <p>\n      Birth : {formatDate(props.birthDate)}\n      <br />\n      Death : {formatDate(props.deathDate)}\n      <br />\n      Cause : {getCause(props.mannerOfDeath, props.causeOfDeath)}\n    </p>\n  </div>\n);\n\nconst get_deezer_link = (id: string) =>\n  `https://www.deezer.com/us/artist/${id}`;\n\nconst get_imdb_link = (id: string) => `https://www.imdb.com/name/${id}`;\n\nconst WikipediaLink = (props: { link: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={props.link}>\n      <Avatar shape=\"square\" size={64} src=\"/img/wikipedia-1024.png\" />\n    </a>\n  </div>\n);\n\nconst DeezerLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_deezer_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/deezer-1024.png\" />\n    </a>\n  </div>\n);\n\nconst ImdbLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_imdb_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/imdb-1024.png\" />\n    </a>\n  </div>\n);\n\nexport const DescriptionBody = (props: Person) => (\n  <div style={outterStyle}>\n    <TopDescription {...props} />\n    <div style={innerStyle}>\n      <div style={textStyle}>\n        {props.description && <p>{props.description}</p>}\n      </div>\n      <TagList categories={props.categories} />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"space-around\",\n          marginTop: \"20px\"\n        }}\n      >\n        <WikipediaLink link={props.link} />\n        {props.deezerId && <DeezerLink id={props.deezerId} />}\n        {props.imdbId && <ImdbLink id={props.imdbId} />}\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Icon, PageHeader } from \"antd\";\nimport { Person } from \"../../api/person\";\nimport { History } from \"history\";\n\nexport const DescriptionHeader = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <PageHeader\n    style={{\n      backgroundColor: \"black\",\n      color: \"white\",\n      paddingTop: \"1em\",\n      paddingBottom: \"1em\"\n    }}\n    title={\n      props.description && (\n        <div style={{ color: \"white\" }}>{props.description.title}</div>\n      )\n    }\n    subTitle={\n      props.description && (\n        <div style={{ color: \"white\" }}>{`${props.description.days} days`}</div>\n      )\n    }\n    onBack={() => props.history.goBack()}\n    backIcon={<Icon style={{ color: \"white\" }} type=\"arrow-left\" />}\n  />\n);\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { DescriptionBody } from \"./DescriptionBody\";\nimport { DescriptionHeader } from \"./DescriptionHeader\";\nimport { AppState } from \"../../store/configureStore\";\nimport { History } from \"history\";\nimport { Person } from \"../../api/person\";\n\nconst DescriptionContent = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <div style={{ minHeight: \"100vh\", backgroundColor: \"#282c34\" }}>\n    <DescriptionHeader {...props} />\n    {props.description ? (\n      <DescriptionBody {...props.description} />\n    ) : (\n      <Skeleton />\n    )}\n  </div>\n);\n\nconst mapStateToProps = (\n  state: AppState,\n  ownProps: { match: { params: { id: string } } }\n) => {\n  const description = state.database.filter(\n    p => p.id === ownProps.match.params.id\n  )[0];\n  return { description };\n};\n\nexport const Description = connect(mapStateToProps)(DescriptionContent);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AnyAction } from \"redux\";\nimport { DatabaseStore } from \"../store/databaseStoreTypes\";\nimport { FILL_DATABASE } from \"../actions/databaseTypes\";\n\nexport const defaultDatabaseState: DatabaseStore = [];\n\nexport default (\n  state: DatabaseStore = defaultDatabaseState,\n  action: AnyAction\n): DatabaseStore => {\n  switch (action.type) {\n    case FILL_DATABASE:\n      return action.data;\n    default:\n      return state;\n  }\n};\n","import { Person } from \"../api/person\";\n\nexport type DatabaseStore = Person[];\n\nexport interface SerializedPerson {\n  id: string;\n  days: string;\n  birthDate: string;\n  deathDate: string;\n  firstName: string;\n  lastName: string;\n  title: string;\n  description: string;\n  image: string;\n  link: string;\n  categories: string[];\n  exactDates: boolean;\n  nationality: string[];\n  mannerOfDeath: string;\n  causeOfDeath: string;\n  imdbId: string;\n  gender: string;\n  occupations: string[];\n  deezerId: string;\n  spotifyId: string;\n}\n\nexport type SerializedDatabaseState = SerializedPerson[];\n\nconst deserializedPerson = (serialized: SerializedPerson): Person =>\n  new Person(\n    serialized.id,\n    serialized.days,\n    new Date(serialized.birthDate),\n    new Date(serialized.deathDate),\n    serialized.firstName,\n    serialized.lastName,\n    serialized.title,\n    serialized.description,\n    serialized.image,\n    serialized.link,\n    serialized.categories,\n    serialized.exactDates,\n    serialized.nationality,\n    serialized.mannerOfDeath,\n    serialized.causeOfDeath,\n    serialized.imdbId,\n    serialized.gender,\n    serialized.occupations,\n    serialized.deezerId,\n    serialized.spotifyId\n  );\n\nexport const deserializeDatabaseState = (\n  state: SerializedDatabaseState\n): DatabaseStore => {\n  return state.map(obj => deserializedPerson(obj));\n};\n","export interface UserState {\n  categories: string[];\n  birth?: Date;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport interface SerializedUserState {\n  categories: string[];\n  birth: string;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport const deserializeUserState = (\n  serialized: SerializedUserState\n): UserState => ({\n  ...serialized,\n  birth: new Date(serialized.birth)\n});\n","import {\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_BIRTH_DATE,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes,\n  SET_BIRTH_TIME\n} from \"../actions/userTypes\";\nimport { UserState } from \"../store/userStoreTypes\";\n\nexport const defaultUserState: UserState = {\n  categories: [\"Famous\"],\n  time: [0, 0, 0],\n  notifPref: \"never\",\n  orderPref: \"outlived\"\n};\n\nexport default (\n  state: UserState = defaultUserState,\n  action: UserActionTypes\n): UserState => {\n  switch (action.type) {\n    case SET_BIRTH_DATE:\n      return {\n        ...state,\n        birth: action.date\n      };\n    case SET_BIRTH_TIME:\n      return {\n        ...state,\n        time: action.time\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.category]\n      };\n    case REMOVE_CATEGORY:\n      return {\n        ...state,\n        categories: state.categories.filter(cat => cat === action.category)\n      };\n    case SET_NOTIF_PREF:\n      return {\n        ...state,\n        notifPref: action.pref\n      };\n    case SET_ORDER_PREF:\n      return {\n        ...state,\n        orderPref: action.pref\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport databaseReducer, { defaultDatabaseState } from \"../reducers/database\";\nimport {\n  deserializeDatabaseState,\n  SerializedDatabaseState\n} from \"../store/databaseStoreTypes\";\nimport {\n  SerializedUserState,\n  deserializeUserState\n} from \"../store/userStoreTypes\";\nimport userReducer, { defaultUserState } from \"../reducers/user\";\n\nconst getDefaultState = () => ({\n  user: defaultUserState,\n  database: defaultDatabaseState\n});\n\nconst deserializeState = (state: {\n  database: SerializedDatabaseState;\n  user: SerializedUserState;\n}): AppState => ({\n  user: deserializeUserState(state.user),\n  database: deserializeDatabaseState(state.database)\n});\n\nconst getPersistedState = () => {\n  const storedState = localStorage.getItem(\"reduxState\");\n  const persistedState = storedState\n    ? deserializeState(JSON.parse(storedState))\n    : getDefaultState();\n  if (persistedState.user.time === undefined) {\n    persistedState.user.time = [0, 0, 0];\n  }\n  return persistedState;\n};\n\nconst rootReducer = combineReducers({\n  database: databaseReducer,\n  user: userReducer\n});\n\nexport default () => {\n  const store = createStore(rootReducer, getPersistedState());\n  store.subscribe(() => {\n    localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n  });\n  return store;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nconst ConnectedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(ConnectedApp, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home } from \"./components/home/Home\";\nimport { Settings } from \"./components/settings/Settings\";\nimport { Statistics } from \"./components/Statistics\";\nimport { Description } from \"./components/description/Description\";\n\nexport default () => (\n  <Router>\n    <div>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/statistics\" component={Statistics} />\n      <Route path=\"/settings\" component={Settings} />\n      <Route path=\"/description/:id\" component={Description} />\n    </div>\n  </Router>\n);\n"],"sourceRoot":""}