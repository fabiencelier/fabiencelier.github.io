{"version":3,"sources":["api/person.ts","api/query.ts","responsive/Responsive.tsx","actions/user.ts","actions/userTypes.ts","components/util/ConnectedBirthPicker.tsx","components/welcome/WelcomeHome.tsx","components/Tabular.tsx","date/date.ts","actions/database.ts","worker/send.ts","actions/databaseTypes.ts","selecters/databaseSelecter.ts","components/home/OrderPicker.tsx","components/util/TagList.tsx","components/home/HomeItemList.tsx","components/home/InfiniteList.tsx","components/home/Home.tsx","components/settings/BirthSettings.tsx","worker/notif.ts","components/settings/NotificationSettings.tsx","components/settings/CategorySettings.tsx","components/settings/Settings.tsx","components/Statistics.tsx","components/description/DescriptionBody.tsx","components/description/DescriptionHeader.tsx","components/description/Description.tsx","worker/init-fcm.ts","App.tsx","serviceWorker.js","reducers/database.ts","store/databaseStoreTypes.ts","store/userStoreTypes.ts","reducers/user.ts","store/configureStore.ts","index.tsx"],"names":["Person","id","days","birthDate","deathDate","firstName","lastName","title","description","image","link","categories","exactDates","nationality","mannerOfDeath","causeOfDeath","imdbId","gender","occupations","deezerId","spotifyId","request","url","getAllDatabase","a","window","fetch","then","response","json","res","values","map","per","row","Date","split","Desktop","props","query","children","Mobile","className","setNotifPreferences","pref","type","defaultBirthDate","ConnectedBirthPicker","onChange","value","dispatch","date","toDate","defaultValue","moment","WelcomeHome","undefined","Tab","to","path","style","color","active","icon","text","mapStateToProps","state","isNew","user","birth","addTabs","args","connect","zIndex","WrappedComponent","innerAddTabs","diffWithTodayInDays","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","dateDiffInDays","pad","num","s","substr","length","formatDate","fillDatabase","data","database","controller","navigator","serviceWorker","postMessage","sendDatabaseToWorker","databaseSelecter","age","outlived","filter","el","parseInt","sort","objA","objB","OrderPicker","Group","order","buttonStyle","e","target","Button","TagList","cat","key","PersonDescription","ListItem","Item","width","Meta","avatar","src","height","objectFit","borderRadius","marginLeft","alt","baseSize","createStateFromProps","allPeople","people","displayedPeople","index","hasMore","loading","InfiniteList","handleInfiniteOnLoad","setState","currentSize","render","initialLoad","pageStart","loadMore","useWindow","itemLayout","dataSource","renderItem","item","React","Component","HomeContent","paddingTop","maxWidth","Home","orderPref","BirthSettings","time","getHours","getMinutes","getSeconds","onTimeChange","setHours","setMinutes","setSeconds","isNotificationAllowed","Notification","permission","showNotification","body","console","log","ready","registration","NotificationSettings","suscribeToNotif","component","requestPermission","result","notifAllowed","onClick","notifPref","CategorySettings","checked","includes","category","updateCategory","addCatagory","removeCatagory","Settings","createState","now","seconds","minutes","hours","StatisticsContent","interval","setInterval","clearInterval","this","Statistics","outterStyle","display","flexDirection","alignItems","marginTop","innerStyle","backgroundColor","textStyle","textAlign","textJustify","marginRight","Image","maxHeight","TopDescription","manner","cause","WikipediaLink","href","shape","size","DeezerLink","ImdbLink","DescriptionBody","DescriptionHeader","paddingBottom","subTitle","onBack","history","goBack","backIcon","Description","ownProps","p","match","params","minHeight","registerToNotif","messaging","getToken","token","addEventListener","message","sendTokenToServer","method","headers","Accept","JSON","stringify","catch","error","App","exact","initializedFirebaseApp","firebase","messagingSenderId","usePublicVapidKey","err","initFirebaseApp","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","register","onupdatefound","installingWorker","installing","onstatechange","onUpdate","onSuccess","defaultDatabaseState","deserializeDatabaseState","obj","serialized","deserializeUserState","defaultUserState","getPersistedState","storedState","localStorage","getItem","parse","rootReducer","combineReducers","action","store","createStore","subscribe","setItem","getState","sendBirthToWorker","configureStore","ConnectedApp","ReactDOM","document","getElementById","scope","URL","process","origin","contentType","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3716cac7.chunk.js","sourcesContent":["export class Person {\n  constructor(\n    public id: string,\n    public days: string,\n    public birthDate: Date,\n    public deathDate: Date,\n    public firstName: string,\n    public lastName: string,\n    public title: string,\n    public description: string,\n    public image: string,\n    public link: string,\n    public categories: string[],\n    public exactDates: boolean,\n    public nationality: string[],\n    public mannerOfDeath: string,\n    public causeOfDeath: string,\n    public imdbId: string,\n    public gender: string,\n    public occupations: string[],\n    public deezerId: string,\n    public spotifyId: string\n  ) {}\n}\n\nexport const getPerson = (row: string[]) =>\n  new Person(\n    row[0],\n    row[1],\n    new Date(row[2]),\n    new Date(row[3]),\n    row[4],\n    row[5],\n    row[6],\n    row[7],\n    row[8],\n    row[9],\n    row[10] ? row[10].split(\",\") : [],\n    row[11] === \"TRUE\",\n    row[12] ? row[12].split(\",\") : [],\n    row[13],\n    row[14],\n    row[15],\n    row[16],\n    row[17] ? row[17].split(\",\") : [],\n    row[18],\n    row[19]\n  );\n","import { getPerson, Person } from \"../api/person\";\n\nconst request = {\n  spreadsheetId: \"1tLcsXib4I6wYr9EJED5uJj_mMfvDwI8hBJ7-dJWnTMk\",\n  range: \"database!A1:T\",\n  key: \"AIzaSyChFa8ete627UC3U9Wlgwffij0QeRdmthc\"\n};\n\nconst url = `https://sheets.googleapis.com/v4/spreadsheets/${request.spreadsheetId}/values/${request.range}?key=${request.key}`;\n\nexport const getAllDatabase = async () => {\n  return window.fetch(url).then(response => {\n    return response.json().then(res => {\n      if (res) {\n        return res.values.map((per: string[]) => getPerson(per));\n      }\n    });\n  });\n};\n\nexport const getFromId = async (id: string) => {\n  const allData = await getAllDatabase();\n  if (allData === undefined) {\n    return undefined;\n  }\n  return allData.filter((p: Person) => p.id === id);\n};\n","import React from \"react\";\nimport MediaQuery from \"react-responsive\";\n\nexport const Desktop = (props: { children: JSX.Element | string }) => (\n  <MediaQuery query=\"(min-device-width: 1224px)\">{props.children}</MediaQuery>\n);\n\nexport const Mobile = (props: { children: JSX.Element | string }) => (\n  <MediaQuery className=\"mobile\" query=\"(max-device-width: 1224px)\">\n    {props.children}\n  </MediaQuery>\n);\n","import {\n  SET_BIRTH_DATE,\n  SET_BIRTH_TIME,\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes\n} from \"./userTypes\";\n\nexport const setBirthDate = (date: Date): UserActionTypes => ({\n  type: SET_BIRTH_DATE,\n  date\n});\n\nexport const setBirthTime = (\n  time: [number, number, number]\n): UserActionTypes => ({\n  type: SET_BIRTH_TIME,\n  time\n});\n\nexport const addCatagory = (category: string): UserActionTypes => ({\n  type: ADD_CATEGORY,\n  category\n});\n\nexport const removeCatagory = (category: string): UserActionTypes => ({\n  type: REMOVE_CATEGORY,\n  category\n});\n\nexport const setNotifPreferences = (pref: string): UserActionTypes => ({\n  type: SET_NOTIF_PREF,\n  pref\n});\n\nexport const setOrderPreference = (pref: string): UserActionTypes => ({\n  type: SET_ORDER_PREF,\n  pref\n});\n","export const SET_BIRTH_DATE = \"SET_BIRTH_DATE\";\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const REMOVE_CATEGORY = \"REMOVE_CATEGORY\";\nexport const SET_NOTIF_PREF = \"SET_NOTIF_PREF\";\nexport const SET_ORDER_PREF = \"SET_ORDER_PREF\";\nexport const SET_BIRTH_TIME = \"SET_BIRTH_TIME\";\n\ninterface SetBirthDateAction {\n  type: typeof SET_BIRTH_DATE;\n  date: Date;\n}\n\ninterface SetBirthTimeAction {\n  type: typeof SET_BIRTH_TIME;\n  time: [number, number, number];\n}\n\ninterface AddCategoryAction {\n  type: typeof ADD_CATEGORY;\n  category: string;\n}\n\ninterface RemoveCategoryAction {\n  type: typeof REMOVE_CATEGORY;\n  category: string;\n}\n\ninterface SetNotifPrefAction {\n  type: typeof SET_NOTIF_PREF;\n  pref: string;\n}\n\ninterface SetOrderPrefAction {\n  type: typeof SET_ORDER_PREF;\n  pref: string;\n}\n\nexport type UserActionTypes =\n  | SetBirthDateAction\n  | AddCategoryAction\n  | RemoveCategoryAction\n  | SetNotifPrefAction\n  | SetOrderPrefAction\n  | SetBirthTimeAction;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthDate } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\n\nconst defaultBirthDate = new Date(\"1993-10-12\");\n\nexport const ConnectedBirthPicker = (props: {\n  value: Date | undefined;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <DatePicker\n      onChange={value =>\n        value !== null && props.dispatch(setBirthDate(value.toDate()))\n      }\n      defaultValue={moment(props.value ? props.value : defaultBirthDate)}\n    />\n  </div>\n);\n","import React from \"react\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { Dispatch } from \"redux\";\n\nexport const WelcomeHome = (props: { dispatch: Dispatch }) => (\n  <div>\n    <h1 className=\"theme\">Outlive</h1>\n    <h3 className=\"theme\">Select your birth date to start</h3>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={undefined} />\n  </div>\n);\n","import React, { ComponentType } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Icon } from \"antd\";\nimport { Desktop } from \"../responsive/Responsive\";\nimport { WelcomeHome } from \"./welcome/WelcomeHome\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { AppState } from \"../store/configureStore\";\n\nconst Tab = (props: {\n  active: boolean;\n  path: string;\n  icon: string;\n  text: string;\n}) => (\n  <div>\n    <Link\n      className=\"Header-link\"\n      to={props.path}\n      style={{ color: props.active ? \"white\" : \"grey\" }}\n    >\n      <Icon type={props.icon} /> <Desktop>{props.text}</Desktop>\n    </Link>\n  </div>\n);\n\ninterface HocArguments {\n  WrappedComponent: ComponentType;\n  active: string;\n}\n\nconst innerAddTabs = (args: HocArguments) => {\n  return (props: { isNew: boolean; dispatch: Dispatch }) => {\n    if (props.isNew) {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <WelcomeHome dispatch={props.dispatch} />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <div style={{ zIndex: 10 }} className=\"flex-container\">\n              <Tab\n                path=\"/\"\n                icon=\"home\"\n                text=\"Home\"\n                active={args.active === \"home\"}\n              />\n              <Tab\n                path=\"/statistics\"\n                icon=\"bar-chart\"\n                text=\"Statistics\"\n                active={args.active === \"statistics\"}\n              />\n              <Tab\n                path=\"/settings\"\n                icon=\"setting\"\n                text=\"Settings\"\n                active={args.active === \"settings\"}\n              />\n            </div>\n            <args.WrappedComponent />\n          </div>\n        </div>\n      );\n    }\n  };\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  isNew: state.user.birth ? false : true\n});\n\nexport const addTabs = (args: HocArguments) =>\n  connect(mapStateToProps)(innerAddTabs(args));\n","// Code copied from https://stackoverflow.com/a/15289883\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\nexport const dateDiffInDays = (a: Date, b: Date): number => {\n  // Discard the time and time-zone information.\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n};\n\nexport const diffWithTodayInDays = (date: Date | undefined): number =>\n  date ? dateDiffInDays(date, new Date()) : 0;\n\nfunction pad(num: number): string {\n  var s = \"00\" + num;\n  return s.substr(s.length - 2);\n}\n\nexport const formatDate = (date: Date) => {\n  return `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(\n    date.getDate()\n  )}`;\n};\n","import { Person } from \"../api/person\";\nimport { DatabaseActionType, FILL_DATABASE } from \"./databaseTypes\";\nimport { sendDatabaseToWorker } from \"../worker/send\";\n\nexport const fillDatabase = (data: Person[]): DatabaseActionType => {\n  sendDatabaseToWorker(data);\n  return {\n    type: FILL_DATABASE,\n    data\n  };\n};\n","import { Person } from \"../api/person\";\n\nexport const sendBirthToWorker = (age: Date) => {\n  const controller = navigator.serviceWorker.controller;\n  if (controller) {\n    controller.postMessage({\n      type: \"BIRTH\",\n      age\n    });\n  }\n};\n\nexport const sendDatabaseToWorker = (database: Person[]) => {\n  const controller = navigator.serviceWorker.controller;\n  if (controller) {\n    controller.postMessage({\n      type: \"DATABASE\",\n      database\n    });\n  }\n};\n","import { Person } from \"../api/person\";\nexport const FILL_DATABASE = \"FILL_DATABASE\";\n\ninterface FillDatabaseAction {\n  type: typeof FILL_DATABASE;\n  data: Person[];\n}\n\nexport type DatabaseActionType = FillDatabaseAction;\n","import { Person } from \"../api/person\";\n\nexport const databaseSelecter = (\n  database: Person[] = [],\n  age: number,\n  outlived: boolean\n) =>\n  database\n    .filter(el =>\n      outlived ? parseInt(el.days, 10) < age : parseInt(el.days, 10) > age\n    )\n    .sort((objA, objB) => {\n      const a = parseInt(objA.days, 10);\n      const b = parseInt(objB.days, 10);\n      return outlived ? (a < b ? 1 : -1) : a > b ? 1 : -1;\n    });\n","import React from \"react\";\nimport { Radio } from \"antd\";\nimport { setOrderPreference } from \"../../actions/user\";\nimport { HomeProps } from \"./Home\";\n\nexport const OrderPicker = (props: HomeProps) => (\n  <div>\n    <Radio.Group\n      value={props.order}\n      buttonStyle=\"solid\"\n      onChange={e => props.dispatch(setOrderPreference(e.target.value))}\n    >\n      <Radio.Button value=\"outlived\">Oulived</Radio.Button>\n      <Radio.Button value=\"next\">Next</Radio.Button>\n    </Radio.Group>\n  </div>\n);\n","import React from \"react\";\nimport { Tag } from \"antd\";\n\nexport const TagList = (props: { categories: string[] }) => (\n  <div>\n    {props.categories.map(cat => (\n      <Tag key={cat} color=\"purple\">\n        {cat}\n      </Tag>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport { List } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { TagList } from \"../util/TagList\";\nimport { Person } from \"../../api/person\";\n\nconst PersonDescription = (props: Person) => (\n  <div>\n    <div style={{ color: \"white\" }}>{props.days} days</div>\n    <TagList categories={props.categories} />\n  </div>\n);\n\nexport const ListItem = (props: Person) => (\n  <List.Item key={props.id}>\n    <Link\n      style={{ width: \"100%\" }}\n      to={props.id === \"you\" ? \"settings\" : `description/${props.id}`}\n    >\n      <List.Item.Meta\n        avatar={\n          <img\n            src={props.image}\n            style={{\n              width: 64,\n              height: 64,\n              objectFit: \"cover\",\n              borderRadius: \"10px\",\n              marginLeft: \"15px\"\n            }}\n            alt={props.title}\n          />\n        }\n        style={{ width: \"100%\" }}\n        title={<span style={{ color: \"white\" }}>{props.title}</span>}\n        description={<PersonDescription {...props} />}\n      />\n    </Link>\n  </List.Item>\n);\n","import InfiniteScroll from \"react-infinite-scroller\";\nimport { ListItem } from \"./HomeItemList\";\nimport { List, Spin } from \"antd\";\nimport React from \"react\";\nimport { Person } from \"../../api/person\";\n\nconst baseSize = 10;\n\ninterface InfiniteListState {\n  allPeople: Person[];\n  displayedPeople: Person[];\n  hasMore: boolean;\n  loading: boolean;\n}\n\ninterface InfiniteListProps {\n  people: Person[];\n}\n\nconst createStateFromProps = (props: InfiniteListProps): InfiniteListState => ({\n  allPeople: props.people,\n  displayedPeople: props.people.filter((el, index) => index < baseSize),\n  hasMore: props.people.length >= baseSize,\n  loading: false\n});\n\nexport class InfiniteList extends React.Component<\n  InfiniteListProps,\n  InfiniteListState\n> {\n  constructor(props: InfiniteListProps) {\n    super(props);\n    this.state = createStateFromProps(props);\n  }\n\n  static getDerivedStateFromProps(\n    props: InfiniteListProps,\n    state: InfiniteListState\n  ) {\n    // Only update the state on new props\n    if (props.people !== state.allPeople) {\n      return createStateFromProps(props);\n    }\n    return null;\n  }\n\n  handleInfiniteOnLoad = () => {\n    this.setState({\n      loading: true\n    });\n    const currentSize = this.state.displayedPeople.length;\n    if (currentSize === this.state.allPeople.length) {\n      this.setState({\n        hasMore: false,\n        loading: false\n      });\n      return;\n    }\n    this.setState({\n      displayedPeople: this.state.allPeople.filter(\n        (el, index) => index < currentSize + baseSize\n      ),\n      loading: false\n    });\n  };\n\n  render = () => (\n    <InfiniteScroll\n      initialLoad={false}\n      pageStart={0}\n      loadMore={this.handleInfiniteOnLoad}\n      hasMore={!this.state.loading && this.state.hasMore}\n      useWindow={true}\n    >\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={this.state.displayedPeople}\n        renderItem={item => <ListItem {...item} />}\n      >\n        {this.state.loading && this.state.hasMore && (\n          <div className=\"demo-loading-container\">\n            <Spin />\n          </div>\n        )}\n      </List>\n    </InfiniteScroll>\n  );\n}\n","import React, { Component } from \"react\";\nimport { getAllDatabase } from \"../../api/query\";\nimport { addTabs } from \"../Tabular\";\nimport { diffWithTodayInDays } from \"../../date/date\";\nimport { connect } from \"react-redux\";\nimport { fillDatabase } from \"../../actions/database\";\nimport { databaseSelecter } from \"../../selecters/databaseSelecter\";\nimport { AppState } from \"../../store/configureStore\";\nimport { Dispatch } from \"redux\";\nimport { DatabaseStore } from \"../../store/databaseStoreTypes\";\nimport { OrderPicker } from \"./OrderPicker\";\nimport { InfiniteList } from \"./InfiniteList\";\n\nexport interface HomeProps {\n  database: DatabaseStore;\n  age: number;\n  order: string;\n  dispatch: Dispatch;\n}\n\nclass HomeContent extends Component<HomeProps> {\n  componentDidMount() {\n    getAllDatabase().then(res => res && this.props.dispatch(fillDatabase(res)));\n  }\n\n  render = () => (\n    <div style={{ width: \"100%\", paddingTop: \"100px\", maxWidth: \"400px\" }}>\n      <h2 style={{ color: \"white\" }}>{this.props.age} days</h2>\n      <OrderPicker {...this.props} />\n      <InfiniteList people={this.props.database} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const age = diffWithTodayInDays(state.user.birth);\n  return {\n    database: databaseSelecter(\n      state.database,\n      age,\n      state.user.orderPref === \"outlived\"\n    ),\n    age,\n    order: state.user.orderPref\n  };\n};\n\nexport const Home = addTabs({\n  WrappedComponent: connect(mapStateToProps)(HomeContent),\n  active: \"home\"\n});\n","import React from \"react\";\nimport { Dispatch } from \"redux\";\nimport { ConnectedBirthPicker } from \"../util/ConnectedBirthPicker\";\nimport { TimePicker } from \"antd\";\nimport moment from \"moment\";\nimport { setBirthTime } from \"../../actions/user\";\n\nconst createMoment = (\n  date: Date,\n  time: [number, number, number]\n): moment.Moment => {\n  date.setHours(time[0]);\n  date.setMinutes(time[1]);\n  date.setSeconds(time[2]);\n  return moment(date);\n};\n\nconst onTimeChange = (moment: moment.Moment, dispatch: Dispatch) => {\n  const date = moment.toDate();\n  dispatch(\n    setBirthTime([date.getHours(), date.getMinutes(), date.getSeconds()])\n  );\n};\n\nexport const BirthSettings = (props: {\n  user: { birth?: Date; time: [number, number, number] };\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Birthdate</h2>\n    <ConnectedBirthPicker dispatch={props.dispatch} value={props.user.birth} />\n    <TimePicker\n      onChange={value => onTimeChange(value, props.dispatch)}\n      value={\n        props.user.birth && createMoment(props.user.birth, props.user.time)\n      }\n    />\n  </div>\n);\n","export const isNotificationAllowed = () => {\n  return Notification.permission === \"granted\";\n};\n\nexport const showNotification = ({\n  title,\n  body,\n  icon = \"logo192.png\"\n}: {\n  title: string;\n  body: string;\n  icon?: string;\n}) => {\n  if (isNotificationAllowed()) {\n    console.log(\"Notif Allowed\");\n    if (!navigator.serviceWorker) {\n      console.log(\"No service worker, cannot notify... sorry !\");\n      return;\n    }\n    navigator.serviceWorker.ready.then(registration => {\n      console.log(\"Notif !\");\n      registration.showNotification(title, {\n        body,\n        icon\n      });\n    });\n  } else {\n    console.log(\"Cannot notify, please allow notification.\");\n  }\n};\n","import React from \"react\";\nimport { Button, Radio } from \"antd\";\nimport { setNotifPreferences } from \"../../actions/user\";\nimport { Dispatch } from \"redux\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { diffWithTodayInDays } from \"../../date/date\";\nimport { showNotification, isNotificationAllowed } from \"../../worker/notif\";\n\ninterface NotifSettingsProps {\n  user: UserState;\n  dispatch: Dispatch;\n}\n\nexport class NotificationSettings extends React.Component<\n  NotifSettingsProps,\n  { notifAllowed: boolean }\n> {\n  constructor(props: NotifSettingsProps) {\n    super(props);\n    this.state = {\n      notifAllowed: isNotificationAllowed()\n    };\n  }\n\n  suscribeToNotif = (age: number) => {\n    const component = this;\n    Notification.requestPermission().then(function(result) {\n      component.setState({ notifAllowed: result === \"granted\" });\n      if (result === \"granted\") {\n        showNotification({\n          title: `${age} days`,\n          body: \"Congratulations, keep living !\",\n          icon: \"logo192.png\"\n        });\n      }\n    });\n  };\n\n  render = () => (\n    <div>\n      <h2 className=\"theme\">Notifications Mode</h2>\n      {!this.state.notifAllowed && (\n        <div>\n          <Button\n            onClick={() =>\n              this.suscribeToNotif(diffWithTodayInDays(this.props.user.birth))\n            }\n          >\n            Allow notification\n          </Button>\n        </div>\n      )}\n      {this.state.notifAllowed && (\n        <Radio.Group\n          onChange={e =>\n            this.props.dispatch(setNotifPreferences(e.target.value))\n          }\n          value={this.props.user.notifPref}\n        >\n          <Radio value={\"outlive\"}>When I outlive</Radio>\n          <Radio value={\"never\"}>Never</Radio>\n        </Radio.Group>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Checkbox } from \"antd\";\nimport { addCatagory, removeCatagory } from \"../../actions/user\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst categories = [\n  \"Famous\",\n  \"Actors\",\n  \"Artists\",\n  \"Politics\",\n  \"Science\",\n  \"Singers\",\n  \"Sport\"\n];\n\nconst updateCategory = (\n  checked: boolean,\n  category: string,\n  dispatch: Dispatch\n) => {\n  checked\n    ? dispatch(addCatagory(category))\n    : dispatch(removeCatagory(category));\n};\n\nexport const CategorySettings = (props: {\n  user: UserState;\n  dispatch: Dispatch;\n}) => (\n  <div>\n    <h2 className=\"theme\">Categories</h2>\n    <div style={{ width: \"100%\" }}>\n      {categories.map(cat => (\n        <Checkbox\n          checked={props.user.categories.includes(cat)}\n          onChange={value =>\n            updateCategory(value.target.checked, cat, props.dispatch)\n          }\n          key={cat}\n        >\n          {cat}\n        </Checkbox>\n      ))}\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Divider } from \"antd\";\nimport { addTabs } from \"../Tabular\";\nimport { connect } from \"react-redux\";\nimport { BirthSettings } from \"./BirthSettings\";\nimport { NotificationSettings } from \"./NotificationSettings\";\nimport { CategorySettings } from \"./CategorySettings\";\nimport { AppState } from \"../../store/configureStore\";\nimport { UserState } from \"../../store/userStoreTypes\";\nimport { Dispatch } from \"redux\";\n\nconst SettingsContent = (props: { user: UserState; dispatch: Dispatch }) => (\n  <div className=\"settings\">\n    <h1 className=\"theme\">Settings</h1>\n    <BirthSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <NotificationSettings {...props} />\n    <Divider type=\"horizontal\" />\n    <CategorySettings {...props} />\n  </div>\n);\n\nconst mapStateToProps = (state: AppState) => ({\n  user: state.user\n});\n\nexport const Settings = addTabs({\n  WrappedComponent: connect(mapStateToProps)(SettingsContent),\n  active: \"settings\"\n});\n","import React from \"react\";\nimport { Statistic } from \"antd\";\nimport { addTabs } from \"./Tabular\";\nimport { diffWithTodayInDays } from \"../date/date\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../store/configureStore\";\n\ninterface StatisticsProps {\n  age: number;\n  time: [number, number, number];\n}\n\nconst createState = (age: number, time: [number, number, number]) => {\n  const now = new Date();\n  const seconds =\n    ((age * 24 + now.getHours() - time[0]) * 60 + now.getMinutes() - time[1]) *\n      60 +\n    now.getSeconds() -\n    time[2];\n  const minutes = Math.floor(seconds / 60);\n  const hours = Math.floor(minutes / 60);\n  return {\n    hours,\n    minutes,\n    seconds\n  };\n};\n\nclass StatisticsContent extends React.Component<StatisticsProps> {\n  interval: NodeJS.Timeout = setInterval(\n    () => this.setState(createState(this.props.age, this.props.time)),\n    250\n  );\n\n  state = createState(this.props.age, this.props.time);\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render = () => (\n    <div>\n      <h1 style={{ color: \"white\" }}>Statistics</h1>\n      <h3 style={{ color: \"white\" }}>Survival Time</h3>\n      <Statistic title=\"Days\" value={this.props.age} />\n      <Statistic title=\"Hours\" value={this.state.hours} />\n      <Statistic title=\"Minutes\" value={this.state.minutes} />\n      <Statistic title=\"Seconds\" value={this.state.seconds} />\n    </div>\n  );\n}\nconst mapStateToProps = (state: AppState) => ({\n  age: diffWithTodayInDays(state.user.birth),\n  time: state.user.time\n});\n\nexport const Statistics = addTabs({\n  WrappedComponent: connect(mapStateToProps)(StatisticsContent),\n  active: \"statistics\"\n});\n","import React, { CSSProperties } from \"react\";\nimport { formatDate } from \"../../date/date\";\nimport { TagList } from \"../util/TagList\";\nimport { Desktop, Mobile } from \"../../responsive/Responsive\";\nimport { Avatar } from \"antd\";\nimport { Person } from \"../../api/person\";\n\nconst outterStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  marginTop: \"30px\"\n};\n\nconst innerStyle: CSSProperties = {\n  backgroundColor: \"#282c34\",\n  color: \"white\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  maxWidth: \"1000px\"\n};\n\nconst textStyle: CSSProperties = {\n  textAlign: \"justify\",\n  textJustify: \"inter-word\",\n  marginLeft: \"15px\",\n  marginRight: \"15px\"\n};\n\nconst Image = (props: { image: string; alt: string }) => (\n  <div>\n    <Desktop>\n      <img src={props.image} style={{ maxHeight: \"500px\" }} alt={props.alt} />\n    </Desktop>\n    <Mobile>\n      <img src={props.image} style={{ maxHeight: \"200px\" }} alt={props.alt} />\n    </Mobile>\n  </div>\n);\n\nconst getCause = (manner: string, cause: string) =>\n  manner\n    ? cause\n      ? `${manner} (${cause})`\n      : manner\n    : cause\n    ? cause\n    : \"Unknown\";\n\nconst TopDescription = (props: Person) => (\n  <div style={innerStyle}>\n    <Image image={props.image} alt={props.title} />\n    <h2 style={{ color: \"white\" }}>{props.title}</h2>\n    <h3 style={{ color: \"white\" }}>{props.days} days</h3>\n    <p>\n      Birth : {formatDate(props.birthDate)}\n      <br />\n      Death : {formatDate(props.deathDate)}\n      <br />\n      Cause : {getCause(props.mannerOfDeath, props.causeOfDeath)}\n    </p>\n  </div>\n);\n\nconst get_deezer_link = (id: string) =>\n  `https://www.deezer.com/us/artist/${id}`;\n\nconst get_imdb_link = (id: string) => `https://www.imdb.com/name/${id}`;\n\nconst WikipediaLink = (props: { link: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={props.link}>\n      <Avatar shape=\"square\" size={64} src=\"/img/wikipedia-1024.png\" />\n    </a>\n  </div>\n);\n\nconst DeezerLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_deezer_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/deezer-1024.png\" />\n    </a>\n  </div>\n);\n\nconst ImdbLink = (props: { id: string }) => (\n  <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\n    <a href={get_imdb_link(props.id)}>\n      <Avatar shape=\"square\" size={64} src=\"/img/imdb-1024.png\" />\n    </a>\n  </div>\n);\n\nexport const DescriptionBody = (props: Person) => (\n  <div style={outterStyle}>\n    <TopDescription {...props} />\n    <div style={innerStyle}>\n      <div style={textStyle}>\n        {props.description && <p>{props.description}</p>}\n      </div>\n      <TagList categories={props.categories} />\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"space-around\",\n          marginTop: \"20px\"\n        }}\n      >\n        <WikipediaLink link={props.link} />\n        {props.deezerId && <DeezerLink id={props.deezerId} />}\n        {props.imdbId && <ImdbLink id={props.imdbId} />}\n      </div>\n    </div>\n  </div>\n);\n","import React from \"react\";\nimport { Icon, PageHeader } from \"antd\";\nimport { Person } from \"../../api/person\";\nimport { History } from \"history\";\n\nexport const DescriptionHeader = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <PageHeader\n    style={{\n      backgroundColor: \"black\",\n      color: \"white\",\n      paddingTop: \"1em\",\n      paddingBottom: \"1em\"\n    }}\n    title={\n      props.description && (\n        <div style={{ color: \"white\" }}>{props.description.title}</div>\n      )\n    }\n    subTitle={\n      props.description && (\n        <div style={{ color: \"white\" }}>{`${props.description.days} days`}</div>\n      )\n    }\n    onBack={() => props.history.goBack()}\n    backIcon={<Icon style={{ color: \"white\" }} type=\"arrow-left\" />}\n  />\n);\n","import React from \"react\";\nimport { Skeleton } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { DescriptionBody } from \"./DescriptionBody\";\nimport { DescriptionHeader } from \"./DescriptionHeader\";\nimport { AppState } from \"../../store/configureStore\";\nimport { History } from \"history\";\nimport { Person } from \"../../api/person\";\n\nconst DescriptionContent = (props: {\n  description: Person;\n  history: History;\n}) => (\n  <div style={{ minHeight: \"100vh\", backgroundColor: \"#282c34\" }}>\n    <DescriptionHeader {...props} />\n    {props.description ? (\n      <DescriptionBody {...props.description} />\n    ) : (\n      <Skeleton />\n    )}\n  </div>\n);\n\nconst mapStateToProps = (\n  state: AppState,\n  ownProps: { match: { params: { id: string } } }\n) => {\n  const description = state.database.filter(\n    p => p.id === ownProps.match.params.id\n  )[0];\n  return { description };\n};\n\nexport const Description = connect(mapStateToProps)(DescriptionContent);\n","import * as firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport { showNotification } from \"./notif\";\n\nexport const initFirebaseApp = (): firebase.messaging.Messaging | null => {\n  const initializedFirebaseApp = firebase.initializeApp({\n    messagingSenderId: \"734287808356\"\n  });\n\n  try {\n    const messaging = initializedFirebaseApp.messaging();\n    messaging.usePublicVapidKey(\n      // Project Settings => Cloud Messaging => Web Push certificates\n      \"BHaxJ58YCs9VFQYjPPo0KzeXAeAVpCXNhbhymeblFTand362yWEmpnRWqjCXfCg01vSEL1twic4_d-6rz7YdN28\"\n    );\n    return messaging;\n  } catch (err) {\n    console.log(\"Messaging is not allowed by this browser.\");\n    return null;\n  }\n};\n\nexport const registerToNotif = async (\n  messaging: firebase.messaging.Messaging\n) => {\n  // this assumes that notif are allowed\n  messaging\n    .getToken()\n    .then(token =>\n      token\n        ? console.log(\"Firebase token\", token)\n        : console.log(\"No firebase token\")\n    );\n  navigator.serviceWorker.addEventListener(\"message\", message => {\n    console.log(message);\n    showNotification({ title: \"You are X days old\", body: \"Congratulations\" });\n  });\n};\n\nconst register_url =\n  \"https://s3p4ucp4be.execute-api.us-west-2.amazonaws.com/default/register-notif\";\n\nexport const sendTokenToServer = async (\n  messaging: firebase.messaging.Messaging\n) => {\n  messaging.getToken().then(token =>\n    fetch(register_url, {\n      method: \"post\",\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ token: token })\n    })\n      .then(response => {\n        return response.json();\n      })\n      .then(result => {\n        console.log(\"Succesfull\", result);\n      })\n      .catch(error => {\n        console.log(\"Request failed\", error);\n      })\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Home } from \"./components/home/Home\";\nimport { Settings } from \"./components/settings/Settings\";\nimport { Statistics } from \"./components/Statistics\";\nimport { Description } from \"./components/description/Description\";\nimport { isNotificationAllowed } from \"./worker/notif\";\nimport {\n  registerToNotif,\n  initFirebaseApp,\n  sendTokenToServer\n} from \"./worker/init-fcm\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    if (isNotificationAllowed) {\n      const messaging = initFirebaseApp();\n      if (messaging != null) {\n        registerToNotif(messaging);\n        sendTokenToServer(messaging);\n      }\n    }\n  }\n\n  render = () => (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/statistics\" component={Statistics} />\n        <Route path=\"/settings\" component={Settings} />\n        <Route path=\"/description/:id\" component={Description} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n// import * as firebase from \"firebase/app\";\n// import \"firebase/messaging\";\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AnyAction } from \"redux\";\nimport { DatabaseStore } from \"../store/databaseStoreTypes\";\nimport { FILL_DATABASE } from \"../actions/databaseTypes\";\n\nexport const defaultDatabaseState: DatabaseStore = [];\n\nexport default (\n  state: DatabaseStore = defaultDatabaseState,\n  action: AnyAction\n): DatabaseStore => {\n  switch (action.type) {\n    case FILL_DATABASE:\n      return action.data;\n    default:\n      return state;\n  }\n};\n","import { Person } from \"../api/person\";\n\nexport type DatabaseStore = Person[];\n\nexport interface SerializedPerson {\n  id: string;\n  days: string;\n  birthDate: string;\n  deathDate: string;\n  firstName: string;\n  lastName: string;\n  title: string;\n  description: string;\n  image: string;\n  link: string;\n  categories: string[];\n  exactDates: boolean;\n  nationality: string[];\n  mannerOfDeath: string;\n  causeOfDeath: string;\n  imdbId: string;\n  gender: string;\n  occupations: string[];\n  deezerId: string;\n  spotifyId: string;\n}\n\nexport type SerializedDatabaseState = SerializedPerson[];\n\nconst deserializedPerson = (serialized: SerializedPerson): Person =>\n  new Person(\n    serialized.id,\n    serialized.days,\n    new Date(serialized.birthDate),\n    new Date(serialized.deathDate),\n    serialized.firstName,\n    serialized.lastName,\n    serialized.title,\n    serialized.description,\n    serialized.image,\n    serialized.link,\n    serialized.categories,\n    serialized.exactDates,\n    serialized.nationality,\n    serialized.mannerOfDeath,\n    serialized.causeOfDeath,\n    serialized.imdbId,\n    serialized.gender,\n    serialized.occupations,\n    serialized.deezerId,\n    serialized.spotifyId\n  );\n\nexport const deserializeDatabaseState = (\n  state: SerializedDatabaseState\n): DatabaseStore => {\n  return state.map(obj => deserializedPerson(obj));\n};\n","export interface UserState {\n  categories: string[];\n  birth?: Date;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport interface SerializedUserState {\n  categories: string[];\n  birth: string;\n  time: [number, number, number];\n  notifPref: string;\n  orderPref: string;\n}\n\nexport const deserializeUserState = (\n  serialized: SerializedUserState\n): UserState => ({\n  ...serialized,\n  birth: new Date(serialized.birth)\n});\n","import {\n  ADD_CATEGORY,\n  REMOVE_CATEGORY,\n  SET_BIRTH_DATE,\n  SET_NOTIF_PREF,\n  SET_ORDER_PREF,\n  UserActionTypes,\n  SET_BIRTH_TIME\n} from \"../actions/userTypes\";\nimport { UserState } from \"../store/userStoreTypes\";\n\nexport const defaultUserState: UserState = {\n  categories: [\"Famous\"],\n  time: [0, 0, 0],\n  notifPref: \"never\",\n  orderPref: \"outlived\"\n};\n\nexport default (\n  state: UserState = defaultUserState,\n  action: UserActionTypes\n): UserState => {\n  switch (action.type) {\n    case SET_BIRTH_DATE:\n      return {\n        ...state,\n        birth: action.date\n      };\n    case SET_BIRTH_TIME:\n      return {\n        ...state,\n        time: action.time\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: [...state.categories, action.category]\n      };\n    case REMOVE_CATEGORY:\n      return {\n        ...state,\n        categories: state.categories.filter(cat => cat === action.category)\n      };\n    case SET_NOTIF_PREF:\n      return {\n        ...state,\n        notifPref: action.pref\n      };\n    case SET_ORDER_PREF:\n      return {\n        ...state,\n        orderPref: action.pref\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers } from \"redux\";\nimport databaseReducer, { defaultDatabaseState } from \"../reducers/database\";\nimport {\n  deserializeDatabaseState,\n  SerializedDatabaseState\n} from \"../store/databaseStoreTypes\";\nimport {\n  SerializedUserState,\n  deserializeUserState\n} from \"../store/userStoreTypes\";\nimport userReducer, { defaultUserState } from \"../reducers/user\";\nimport { sendBirthToWorker } from \"../worker/send\";\n\nconst getDefaultState = () => ({\n  user: defaultUserState,\n  database: defaultDatabaseState\n});\n\nconst deserializeState = (state: {\n  database: SerializedDatabaseState;\n  user: SerializedUserState;\n}): AppState => ({\n  user: deserializeUserState(state.user),\n  database: deserializeDatabaseState(state.database)\n});\n\nconst getPersistedState = () => {\n  const storedState = localStorage.getItem(\"reduxState\");\n  const persistedState = storedState\n    ? deserializeState(JSON.parse(storedState))\n    : getDefaultState();\n  return persistedState;\n};\n\nconst rootReducer = combineReducers({\n  database: databaseReducer,\n  user: userReducer\n});\n\nexport default () => {\n  const store = createStore(rootReducer, getPersistedState());\n  store.subscribe(() => {\n    localStorage.setItem(\"reduxState\", JSON.stringify(store.getState()));\n  });\n  store.subscribe(() => {\n    const birth = store.getState().user.birth;\n    birth && sendBirthToWorker(birth);\n  });\n  return store;\n};\n\nexport type AppState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./store/configureStore\";\n\nconst store = configureStore();\n\nconst ConnectedApp = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(ConnectedApp, document.getElementById(\"root\"));\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"../firebase-messaging-sw.js\")\n    .then(registration => {\n      console.log(\n        \"Firebase SW Registration successful, scope is:\",\n        registration.scope\n      );\n    })\n    .catch(err => {\n      console.log(\"Firebase Service worker registration failed, error:\", err);\n    });\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}